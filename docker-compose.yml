version: '3.9'

services:
  mongodb:
    image: mongo:7.0
    container_name: xscan-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASS:-password}
      MONGO_INITDB_DATABASE: ${MONGO_DB:-xscan}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./backend/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - xscan-network

  redis:
    image: redis:7.2-alpine
    container_name: xscan-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - xscan-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: xscan-backend
    restart: unless-stopped
    env_file:
      - ./backend/.env
    environment:
      NODE_ENV: production
      PORT: 3001
      MONGODB_URI: mongodb://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASS:-password}@mongodb:27017/${MONGO_DB:-xscan}?authSource=admin
      REDIS_HOST: redis
      REDIS_PORT: 6379
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
      BASE_URL: ${BASE_URL:-http://localhost:3001}
    ports:
      - "3001:3001"
    depends_on:
      - mongodb
      - redis
    networks:
      - xscan-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: xscan-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      HOSTNAME: 0.0.0.0
      NEXT_PUBLIC_API_URL: ${PUBLIC_API_URL:-http://localhost:3001}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - xscan-network

volumes:
  mongodb_data:
  redis_data:

networks:
  xscan-network:
    driver: bridge


