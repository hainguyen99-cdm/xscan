"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@tanstack";
exports.ids = ["vendor-chunks/@tanstack"];
exports.modules = {

/***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/focusManager.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/focusManager.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FocusManager: () => (/* binding */ FocusManager),\n/* harmony export */   focusManager: () => (/* binding */ focusManager)\n/* harmony export */ });\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/subscribable.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/focusManager.ts\n\n\nvar FocusManager = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n    #focused;\n    #cleanup;\n    #setup;\n    constructor(){\n        super();\n        this.#setup = (onFocus)=>{\n            if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__.isServer && window.addEventListener) {\n                const listener = ()=>onFocus();\n                window.addEventListener(\"visibilitychange\", listener, false);\n                return ()=>{\n                    window.removeEventListener(\"visibilitychange\", listener);\n                };\n            }\n            return;\n        };\n    }\n    onSubscribe() {\n        if (!this.#cleanup) {\n            this.setEventListener(this.#setup);\n        }\n    }\n    onUnsubscribe() {\n        if (!this.hasListeners()) {\n            this.#cleanup?.();\n            this.#cleanup = void 0;\n        }\n    }\n    setEventListener(setup) {\n        this.#setup = setup;\n        this.#cleanup?.();\n        this.#cleanup = setup((focused)=>{\n            if (typeof focused === \"boolean\") {\n                this.setFocused(focused);\n            } else {\n                this.onFocus();\n            }\n        });\n    }\n    setFocused(focused) {\n        const changed = this.#focused !== focused;\n        if (changed) {\n            this.#focused = focused;\n            this.onFocus();\n        }\n    }\n    onFocus() {\n        const isFocused = this.isFocused();\n        this.listeners.forEach((listener)=>{\n            listener(isFocused);\n        });\n    }\n    isFocused() {\n        if (typeof this.#focused === \"boolean\") {\n            return this.#focused;\n        }\n        return globalThis.document?.visibilityState !== \"hidden\";\n    }\n};\nvar focusManager = new FocusManager();\n //# sourceMappingURL=focusManager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9mb2N1c01hbmFnZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLHNCQUFzQjtBQUMyQjtBQUNYO0FBQ3RDLElBQUlFLGVBQWUsY0FBY0YsMERBQVlBO0lBQzNDLENBQUNHLE9BQU8sQ0FBQztJQUNULENBQUNDLE9BQU8sQ0FBQztJQUNULENBQUNDLEtBQUssQ0FBQztJQUNQQyxhQUFjO1FBQ1osS0FBSztRQUNMLElBQUksQ0FBQyxDQUFDRCxLQUFLLEdBQUcsQ0FBQ0U7WUFDYixJQUFJLENBQUNOLCtDQUFRQSxJQUFJTyxPQUFPQyxnQkFBZ0IsRUFBRTtnQkFDeEMsTUFBTUMsV0FBVyxJQUFNSDtnQkFDdkJDLE9BQU9DLGdCQUFnQixDQUFDLG9CQUFvQkMsVUFBVTtnQkFDdEQsT0FBTztvQkFDTEYsT0FBT0csbUJBQW1CLENBQUMsb0JBQW9CRDtnQkFDakQ7WUFDRjtZQUNBO1FBQ0Y7SUFDRjtJQUNBRSxjQUFjO1FBQ1osSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDUixPQUFPLEVBQUU7WUFDbEIsSUFBSSxDQUFDUyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQ1IsS0FBSztRQUNuQztJQUNGO0lBQ0FTLGdCQUFnQjtRQUNkLElBQUksQ0FBQyxJQUFJLENBQUNDLFlBQVksSUFBSTtZQUN4QixJQUFJLENBQUMsQ0FBQ1gsT0FBTztZQUNiLElBQUksQ0FBQyxDQUFDQSxPQUFPLEdBQUcsS0FBSztRQUN2QjtJQUNGO0lBQ0FTLGlCQUFpQlIsS0FBSyxFQUFFO1FBQ3RCLElBQUksQ0FBQyxDQUFDQSxLQUFLLEdBQUdBO1FBQ2QsSUFBSSxDQUFDLENBQUNELE9BQU87UUFDYixJQUFJLENBQUMsQ0FBQ0EsT0FBTyxHQUFHQyxNQUFNLENBQUNGO1lBQ3JCLElBQUksT0FBT0EsWUFBWSxXQUFXO2dCQUNoQyxJQUFJLENBQUNhLFVBQVUsQ0FBQ2I7WUFDbEIsT0FBTztnQkFDTCxJQUFJLENBQUNJLE9BQU87WUFDZDtRQUNGO0lBQ0Y7SUFDQVMsV0FBV2IsT0FBTyxFQUFFO1FBQ2xCLE1BQU1jLFVBQVUsSUFBSSxDQUFDLENBQUNkLE9BQU8sS0FBS0E7UUFDbEMsSUFBSWMsU0FBUztZQUNYLElBQUksQ0FBQyxDQUFDZCxPQUFPLEdBQUdBO1lBQ2hCLElBQUksQ0FBQ0ksT0FBTztRQUNkO0lBQ0Y7SUFDQUEsVUFBVTtRQUNSLE1BQU1XLFlBQVksSUFBSSxDQUFDQSxTQUFTO1FBQ2hDLElBQUksQ0FBQ0MsU0FBUyxDQUFDQyxPQUFPLENBQUMsQ0FBQ1Y7WUFDdEJBLFNBQVNRO1FBQ1g7SUFDRjtJQUNBQSxZQUFZO1FBQ1YsSUFBSSxPQUFPLElBQUksQ0FBQyxDQUFDZixPQUFPLEtBQUssV0FBVztZQUN0QyxPQUFPLElBQUksQ0FBQyxDQUFDQSxPQUFPO1FBQ3RCO1FBQ0EsT0FBT2tCLFdBQVdDLFFBQVEsRUFBRUMsb0JBQW9CO0lBQ2xEO0FBQ0Y7QUFDQSxJQUFJQyxlQUFlLElBQUl0QjtBQUlyQixDQUNGLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL3hzY2FuLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vZm9jdXNNYW5hZ2VyLmpzPzMxMjkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2ZvY3VzTWFuYWdlci50c1xuaW1wb3J0IHsgU3Vic2NyaWJhYmxlIH0gZnJvbSBcIi4vc3Vic2NyaWJhYmxlLmpzXCI7XG5pbXBvcnQgeyBpc1NlcnZlciB9IGZyb20gXCIuL3V0aWxzLmpzXCI7XG52YXIgRm9jdXNNYW5hZ2VyID0gY2xhc3MgZXh0ZW5kcyBTdWJzY3JpYmFibGUge1xuICAjZm9jdXNlZDtcbiAgI2NsZWFudXA7XG4gICNzZXR1cDtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLiNzZXR1cCA9IChvbkZvY3VzKSA9PiB7XG4gICAgICBpZiAoIWlzU2VydmVyICYmIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgICAgIGNvbnN0IGxpc3RlbmVyID0gKCkgPT4gb25Gb2N1cygpO1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInZpc2liaWxpdHljaGFuZ2VcIiwgbGlzdGVuZXIsIGZhbHNlKTtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInZpc2liaWxpdHljaGFuZ2VcIiwgbGlzdGVuZXIpO1xuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgcmV0dXJuO1xuICAgIH07XG4gIH1cbiAgb25TdWJzY3JpYmUoKSB7XG4gICAgaWYgKCF0aGlzLiNjbGVhbnVwKSB7XG4gICAgICB0aGlzLnNldEV2ZW50TGlzdGVuZXIodGhpcy4jc2V0dXApO1xuICAgIH1cbiAgfVxuICBvblVuc3Vic2NyaWJlKCkge1xuICAgIGlmICghdGhpcy5oYXNMaXN0ZW5lcnMoKSkge1xuICAgICAgdGhpcy4jY2xlYW51cD8uKCk7XG4gICAgICB0aGlzLiNjbGVhbnVwID0gdm9pZCAwO1xuICAgIH1cbiAgfVxuICBzZXRFdmVudExpc3RlbmVyKHNldHVwKSB7XG4gICAgdGhpcy4jc2V0dXAgPSBzZXR1cDtcbiAgICB0aGlzLiNjbGVhbnVwPy4oKTtcbiAgICB0aGlzLiNjbGVhbnVwID0gc2V0dXAoKGZvY3VzZWQpID0+IHtcbiAgICAgIGlmICh0eXBlb2YgZm9jdXNlZCA9PT0gXCJib29sZWFuXCIpIHtcbiAgICAgICAgdGhpcy5zZXRGb2N1c2VkKGZvY3VzZWQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5vbkZvY3VzKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgc2V0Rm9jdXNlZChmb2N1c2VkKSB7XG4gICAgY29uc3QgY2hhbmdlZCA9IHRoaXMuI2ZvY3VzZWQgIT09IGZvY3VzZWQ7XG4gICAgaWYgKGNoYW5nZWQpIHtcbiAgICAgIHRoaXMuI2ZvY3VzZWQgPSBmb2N1c2VkO1xuICAgICAgdGhpcy5vbkZvY3VzKCk7XG4gICAgfVxuICB9XG4gIG9uRm9jdXMoKSB7XG4gICAgY29uc3QgaXNGb2N1c2VkID0gdGhpcy5pc0ZvY3VzZWQoKTtcbiAgICB0aGlzLmxpc3RlbmVycy5mb3JFYWNoKChsaXN0ZW5lcikgPT4ge1xuICAgICAgbGlzdGVuZXIoaXNGb2N1c2VkKTtcbiAgICB9KTtcbiAgfVxuICBpc0ZvY3VzZWQoKSB7XG4gICAgaWYgKHR5cGVvZiB0aGlzLiNmb2N1c2VkID09PSBcImJvb2xlYW5cIikge1xuICAgICAgcmV0dXJuIHRoaXMuI2ZvY3VzZWQ7XG4gICAgfVxuICAgIHJldHVybiBnbG9iYWxUaGlzLmRvY3VtZW50Py52aXNpYmlsaXR5U3RhdGUgIT09IFwiaGlkZGVuXCI7XG4gIH1cbn07XG52YXIgZm9jdXNNYW5hZ2VyID0gbmV3IEZvY3VzTWFuYWdlcigpO1xuZXhwb3J0IHtcbiAgRm9jdXNNYW5hZ2VyLFxuICBmb2N1c01hbmFnZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mb2N1c01hbmFnZXIuanMubWFwIl0sIm5hbWVzIjpbIlN1YnNjcmliYWJsZSIsImlzU2VydmVyIiwiRm9jdXNNYW5hZ2VyIiwiZm9jdXNlZCIsImNsZWFudXAiLCJzZXR1cCIsImNvbnN0cnVjdG9yIiwib25Gb2N1cyIsIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJsaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJvblN1YnNjcmliZSIsInNldEV2ZW50TGlzdGVuZXIiLCJvblVuc3Vic2NyaWJlIiwiaGFzTGlzdGVuZXJzIiwic2V0Rm9jdXNlZCIsImNoYW5nZWQiLCJpc0ZvY3VzZWQiLCJsaXN0ZW5lcnMiLCJmb3JFYWNoIiwiZ2xvYmFsVGhpcyIsImRvY3VtZW50IiwidmlzaWJpbGl0eVN0YXRlIiwiZm9jdXNNYW5hZ2VyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/focusManager.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasNextPage: () => (/* binding */ hasNextPage),\n/* harmony export */   hasPreviousPage: () => (/* binding */ hasPreviousPage),\n/* harmony export */   infiniteQueryBehavior: () => (/* binding */ infiniteQueryBehavior)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/infiniteQueryBehavior.ts\n\nfunction infiniteQueryBehavior(pages) {\n    return {\n        onFetch: (context, query)=>{\n            const options = context.options;\n            const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n            const oldPages = context.state.data?.pages || [];\n            const oldPageParams = context.state.data?.pageParams || [];\n            let result = {\n                pages: [],\n                pageParams: []\n            };\n            let currentPage = 0;\n            const fetchFn = async ()=>{\n                let cancelled = false;\n                const addSignalProperty = (object)=>{\n                    Object.defineProperty(object, \"signal\", {\n                        enumerable: true,\n                        get: ()=>{\n                            if (context.signal.aborted) {\n                                cancelled = true;\n                            } else {\n                                context.signal.addEventListener(\"abort\", ()=>{\n                                    cancelled = true;\n                                });\n                            }\n                            return context.signal;\n                        }\n                    });\n                };\n                const queryFn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ensureQueryFn)(context.options, context.fetchOptions);\n                const fetchPage = async (data, param, previous)=>{\n                    if (cancelled) {\n                        return Promise.reject();\n                    }\n                    if (param == null && data.pages.length) {\n                        return Promise.resolve(data);\n                    }\n                    const createQueryFnContext = ()=>{\n                        const queryFnContext2 = {\n                            client: context.client,\n                            queryKey: context.queryKey,\n                            pageParam: param,\n                            direction: previous ? \"backward\" : \"forward\",\n                            meta: context.options.meta\n                        };\n                        addSignalProperty(queryFnContext2);\n                        return queryFnContext2;\n                    };\n                    const queryFnContext = createQueryFnContext();\n                    const page = await queryFn(queryFnContext);\n                    const { maxPages } = context.options;\n                    const addTo = previous ? _utils_js__WEBPACK_IMPORTED_MODULE_0__.addToStart : _utils_js__WEBPACK_IMPORTED_MODULE_0__.addToEnd;\n                    return {\n                        pages: addTo(data.pages, page, maxPages),\n                        pageParams: addTo(data.pageParams, param, maxPages)\n                    };\n                };\n                if (direction && oldPages.length) {\n                    const previous = direction === \"backward\";\n                    const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n                    const oldData = {\n                        pages: oldPages,\n                        pageParams: oldPageParams\n                    };\n                    const param = pageParamFn(options, oldData);\n                    result = await fetchPage(oldData, param, previous);\n                } else {\n                    const remainingPages = pages ?? oldPages.length;\n                    do {\n                        const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n                        if (currentPage > 0 && param == null) {\n                            break;\n                        }\n                        result = await fetchPage(result, param);\n                        currentPage++;\n                    }while (currentPage < remainingPages);\n                }\n                return result;\n            };\n            if (context.options.persister) {\n                context.fetchFn = ()=>{\n                    return context.options.persister?.(fetchFn, {\n                        client: context.client,\n                        queryKey: context.queryKey,\n                        meta: context.options.meta,\n                        signal: context.signal\n                    }, query);\n                };\n            } else {\n                context.fetchFn = fetchFn;\n            }\n        }\n    };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n    const lastIndex = pages.length - 1;\n    return pages.length > 0 ? options.getNextPageParam(pages[lastIndex], pages, pageParams[lastIndex], pageParams) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n    return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n    if (!data) return false;\n    return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n    if (!data || !options.getPreviousPageParam) return false;\n    return getPreviousPageParam(options, data) != null;\n}\n //# sourceMappingURL=infiniteQueryBehavior.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/mutation.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/mutation.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Mutation: () => (/* binding */ Mutation),\n/* harmony export */   getDefaultState: () => (/* binding */ getDefaultState)\n/* harmony export */ });\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./notifyManager.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _removable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./removable.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/removable.js\");\n/* harmony import */ var _retryer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./retryer.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/retryer.js\");\n// src/mutation.ts\n\n\n\nvar Mutation = class extends _removable_js__WEBPACK_IMPORTED_MODULE_0__.Removable {\n    #observers;\n    #mutationCache;\n    #retryer;\n    constructor(config){\n        super();\n        this.mutationId = config.mutationId;\n        this.#mutationCache = config.mutationCache;\n        this.#observers = [];\n        this.state = config.state || getDefaultState();\n        this.setOptions(config.options);\n        this.scheduleGc();\n    }\n    setOptions(options) {\n        this.options = options;\n        this.updateGcTime(this.options.gcTime);\n    }\n    get meta() {\n        return this.options.meta;\n    }\n    addObserver(observer) {\n        if (!this.#observers.includes(observer)) {\n            this.#observers.push(observer);\n            this.clearGcTimeout();\n            this.#mutationCache.notify({\n                type: \"observerAdded\",\n                mutation: this,\n                observer\n            });\n        }\n    }\n    removeObserver(observer) {\n        this.#observers = this.#observers.filter((x)=>x !== observer);\n        this.scheduleGc();\n        this.#mutationCache.notify({\n            type: \"observerRemoved\",\n            mutation: this,\n            observer\n        });\n    }\n    optionalRemove() {\n        if (!this.#observers.length) {\n            if (this.state.status === \"pending\") {\n                this.scheduleGc();\n            } else {\n                this.#mutationCache.remove(this);\n            }\n        }\n    }\n    continue() {\n        return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n        this.execute(this.state.variables);\n    }\n    async execute(variables) {\n        const onContinue = ()=>{\n            this.#dispatch({\n                type: \"continue\"\n            });\n        };\n        this.#retryer = (0,_retryer_js__WEBPACK_IMPORTED_MODULE_1__.createRetryer)({\n            fn: ()=>{\n                if (!this.options.mutationFn) {\n                    return Promise.reject(new Error(\"No mutationFn found\"));\n                }\n                return this.options.mutationFn(variables);\n            },\n            onFail: (failureCount, error)=>{\n                this.#dispatch({\n                    type: \"failed\",\n                    failureCount,\n                    error\n                });\n            },\n            onPause: ()=>{\n                this.#dispatch({\n                    type: \"pause\"\n                });\n            },\n            onContinue,\n            retry: this.options.retry ?? 0,\n            retryDelay: this.options.retryDelay,\n            networkMode: this.options.networkMode,\n            canRun: ()=>this.#mutationCache.canRun(this)\n        });\n        const restored = this.state.status === \"pending\";\n        const isPaused = !this.#retryer.canStart();\n        try {\n            if (restored) {\n                onContinue();\n            } else {\n                this.#dispatch({\n                    type: \"pending\",\n                    variables,\n                    isPaused\n                });\n                await this.#mutationCache.config.onMutate?.(variables, this);\n                const context = await this.options.onMutate?.(variables);\n                if (context !== this.state.context) {\n                    this.#dispatch({\n                        type: \"pending\",\n                        context,\n                        variables,\n                        isPaused\n                    });\n                }\n            }\n            const data = await this.#retryer.start();\n            await this.#mutationCache.config.onSuccess?.(data, variables, this.state.context, this);\n            await this.options.onSuccess?.(data, variables, this.state.context);\n            await this.#mutationCache.config.onSettled?.(data, null, this.state.variables, this.state.context, this);\n            await this.options.onSettled?.(data, null, variables, this.state.context);\n            this.#dispatch({\n                type: \"success\",\n                data\n            });\n            return data;\n        } catch (error) {\n            try {\n                await this.#mutationCache.config.onError?.(error, variables, this.state.context, this);\n                await this.options.onError?.(error, variables, this.state.context);\n                await this.#mutationCache.config.onSettled?.(void 0, error, this.state.variables, this.state.context, this);\n                await this.options.onSettled?.(void 0, error, variables, this.state.context);\n                throw error;\n            } finally{\n                this.#dispatch({\n                    type: \"error\",\n                    error\n                });\n            }\n        } finally{\n            this.#mutationCache.runNext(this);\n        }\n    }\n    #dispatch(action) {\n        const reducer = (state)=>{\n            switch(action.type){\n                case \"failed\":\n                    return {\n                        ...state,\n                        failureCount: action.failureCount,\n                        failureReason: action.error\n                    };\n                case \"pause\":\n                    return {\n                        ...state,\n                        isPaused: true\n                    };\n                case \"continue\":\n                    return {\n                        ...state,\n                        isPaused: false\n                    };\n                case \"pending\":\n                    return {\n                        ...state,\n                        context: action.context,\n                        data: void 0,\n                        failureCount: 0,\n                        failureReason: null,\n                        error: null,\n                        isPaused: action.isPaused,\n                        status: \"pending\",\n                        variables: action.variables,\n                        submittedAt: Date.now()\n                    };\n                case \"success\":\n                    return {\n                        ...state,\n                        data: action.data,\n                        failureCount: 0,\n                        failureReason: null,\n                        error: null,\n                        status: \"success\",\n                        isPaused: false\n                    };\n                case \"error\":\n                    return {\n                        ...state,\n                        data: void 0,\n                        error: action.error,\n                        failureCount: state.failureCount + 1,\n                        failureReason: action.error,\n                        isPaused: false,\n                        status: \"error\"\n                    };\n            }\n        };\n        this.state = reducer(this.state);\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(()=>{\n            this.#observers.forEach((observer)=>{\n                observer.onMutationUpdate(action);\n            });\n            this.#mutationCache.notify({\n                mutation: this,\n                type: \"updated\",\n                action\n            });\n        });\n    }\n};\nfunction getDefaultState() {\n    return {\n        context: void 0,\n        data: void 0,\n        error: null,\n        failureCount: 0,\n        failureReason: null,\n        isPaused: false,\n        status: \"idle\",\n        variables: void 0,\n        submittedAt: 0\n    };\n}\n //# sourceMappingURL=mutation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/mutation.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/mutationCache.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/mutationCache.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MutationCache: () => (/* binding */ MutationCache)\n/* harmony export */ });\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./notifyManager.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _mutation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mutation.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/mutation.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/subscribable.js\");\n// src/mutationCache.ts\n\n\n\n\nvar MutationCache = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n    constructor(config = {}){\n        super();\n        this.config = config;\n        this.#mutations = /* @__PURE__ */ new Set();\n        this.#scopes = /* @__PURE__ */ new Map();\n        this.#mutationId = 0;\n    }\n    #mutations;\n    #scopes;\n    #mutationId;\n    build(client, options, state) {\n        const mutation = new _mutation_js__WEBPACK_IMPORTED_MODULE_1__.Mutation({\n            mutationCache: this,\n            mutationId: ++this.#mutationId,\n            options: client.defaultMutationOptions(options),\n            state\n        });\n        this.add(mutation);\n        return mutation;\n    }\n    add(mutation) {\n        this.#mutations.add(mutation);\n        const scope = scopeFor(mutation);\n        if (typeof scope === \"string\") {\n            const scopedMutations = this.#scopes.get(scope);\n            if (scopedMutations) {\n                scopedMutations.push(mutation);\n            } else {\n                this.#scopes.set(scope, [\n                    mutation\n                ]);\n            }\n        }\n        this.notify({\n            type: \"added\",\n            mutation\n        });\n    }\n    remove(mutation) {\n        if (this.#mutations.delete(mutation)) {\n            const scope = scopeFor(mutation);\n            if (typeof scope === \"string\") {\n                const scopedMutations = this.#scopes.get(scope);\n                if (scopedMutations) {\n                    if (scopedMutations.length > 1) {\n                        const index = scopedMutations.indexOf(mutation);\n                        if (index !== -1) {\n                            scopedMutations.splice(index, 1);\n                        }\n                    } else if (scopedMutations[0] === mutation) {\n                        this.#scopes.delete(scope);\n                    }\n                }\n            }\n        }\n        this.notify({\n            type: \"removed\",\n            mutation\n        });\n    }\n    canRun(mutation) {\n        const scope = scopeFor(mutation);\n        if (typeof scope === \"string\") {\n            const mutationsWithSameScope = this.#scopes.get(scope);\n            const firstPendingMutation = mutationsWithSameScope?.find((m)=>m.state.status === \"pending\");\n            return !firstPendingMutation || firstPendingMutation === mutation;\n        } else {\n            return true;\n        }\n    }\n    runNext(mutation) {\n        const scope = scopeFor(mutation);\n        if (typeof scope === \"string\") {\n            const foundMutation = this.#scopes.get(scope)?.find((m)=>m !== mutation && m.state.isPaused);\n            return foundMutation?.continue() ?? Promise.resolve();\n        } else {\n            return Promise.resolve();\n        }\n    }\n    clear() {\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(()=>{\n            this.#mutations.forEach((mutation)=>{\n                this.notify({\n                    type: \"removed\",\n                    mutation\n                });\n            });\n            this.#mutations.clear();\n            this.#scopes.clear();\n        });\n    }\n    getAll() {\n        return Array.from(this.#mutations);\n    }\n    find(filters) {\n        const defaultedFilters = {\n            exact: true,\n            ...filters\n        };\n        return this.getAll().find((mutation)=>(0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.matchMutation)(defaultedFilters, mutation));\n    }\n    findAll(filters = {}) {\n        return this.getAll().filter((mutation)=>(0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.matchMutation)(filters, mutation));\n    }\n    notify(event) {\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(()=>{\n            this.listeners.forEach((listener)=>{\n                listener(event);\n            });\n        });\n    }\n    resumePausedMutations() {\n        const pausedMutations = this.getAll().filter((x)=>x.state.isPaused);\n        return _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(()=>Promise.all(pausedMutations.map((mutation)=>mutation.continue().catch(_utils_js__WEBPACK_IMPORTED_MODULE_3__.noop))));\n    }\n};\nfunction scopeFor(mutation) {\n    return mutation.options.scope?.id;\n}\n //# sourceMappingURL=mutationCache.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/mutationCache.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/notifyManager.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/notifyManager.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNotifyManager: () => (/* binding */ createNotifyManager),\n/* harmony export */   defaultScheduler: () => (/* binding */ defaultScheduler),\n/* harmony export */   notifyManager: () => (/* binding */ notifyManager)\n/* harmony export */ });\n// src/notifyManager.ts\nvar defaultScheduler = (cb)=>setTimeout(cb, 0);\nfunction createNotifyManager() {\n    let queue = [];\n    let transactions = 0;\n    let notifyFn = (callback)=>{\n        callback();\n    };\n    let batchNotifyFn = (callback)=>{\n        callback();\n    };\n    let scheduleFn = defaultScheduler;\n    const schedule = (callback)=>{\n        if (transactions) {\n            queue.push(callback);\n        } else {\n            scheduleFn(()=>{\n                notifyFn(callback);\n            });\n        }\n    };\n    const flush = ()=>{\n        const originalQueue = queue;\n        queue = [];\n        if (originalQueue.length) {\n            scheduleFn(()=>{\n                batchNotifyFn(()=>{\n                    originalQueue.forEach((callback)=>{\n                        notifyFn(callback);\n                    });\n                });\n            });\n        }\n    };\n    return {\n        batch: (callback)=>{\n            let result;\n            transactions++;\n            try {\n                result = callback();\n            } finally{\n                transactions--;\n                if (!transactions) {\n                    flush();\n                }\n            }\n            return result;\n        },\n        /**\n     * All calls to the wrapped function will be batched.\n     */ batchCalls: (callback)=>{\n            return (...args)=>{\n                schedule(()=>{\n                    callback(...args);\n                });\n            };\n        },\n        schedule,\n        /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */ setNotifyFunction: (fn)=>{\n            notifyFn = fn;\n        },\n        /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */ setBatchNotifyFunction: (fn)=>{\n            batchNotifyFn = fn;\n        },\n        setScheduler: (fn)=>{\n            scheduleFn = fn;\n        }\n    };\n}\nvar notifyManager = createNotifyManager();\n //# sourceMappingURL=notifyManager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9ub3RpZnlNYW5hZ2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLHVCQUF1QjtBQUN2QixJQUFJQSxtQkFBbUIsQ0FBQ0MsS0FBT0MsV0FBV0QsSUFBSTtBQUM5QyxTQUFTRTtJQUNQLElBQUlDLFFBQVEsRUFBRTtJQUNkLElBQUlDLGVBQWU7SUFDbkIsSUFBSUMsV0FBVyxDQUFDQztRQUNkQTtJQUNGO0lBQ0EsSUFBSUMsZ0JBQWdCLENBQUNEO1FBQ25CQTtJQUNGO0lBQ0EsSUFBSUUsYUFBYVQ7SUFDakIsTUFBTVUsV0FBVyxDQUFDSDtRQUNoQixJQUFJRixjQUFjO1lBQ2hCRCxNQUFNTyxJQUFJLENBQUNKO1FBQ2IsT0FBTztZQUNMRSxXQUFXO2dCQUNUSCxTQUFTQztZQUNYO1FBQ0Y7SUFDRjtJQUNBLE1BQU1LLFFBQVE7UUFDWixNQUFNQyxnQkFBZ0JUO1FBQ3RCQSxRQUFRLEVBQUU7UUFDVixJQUFJUyxjQUFjQyxNQUFNLEVBQUU7WUFDeEJMLFdBQVc7Z0JBQ1RELGNBQWM7b0JBQ1pLLGNBQWNFLE9BQU8sQ0FBQyxDQUFDUjt3QkFDckJELFNBQVNDO29CQUNYO2dCQUNGO1lBQ0Y7UUFDRjtJQUNGO0lBQ0EsT0FBTztRQUNMUyxPQUFPLENBQUNUO1lBQ04sSUFBSVU7WUFDSlo7WUFDQSxJQUFJO2dCQUNGWSxTQUFTVjtZQUNYLFNBQVU7Z0JBQ1JGO2dCQUNBLElBQUksQ0FBQ0EsY0FBYztvQkFDakJPO2dCQUNGO1lBQ0Y7WUFDQSxPQUFPSztRQUNUO1FBQ0E7O0tBRUMsR0FDREMsWUFBWSxDQUFDWDtZQUNYLE9BQU8sQ0FBQyxHQUFHWTtnQkFDVFQsU0FBUztvQkFDUEgsWUFBWVk7Z0JBQ2Q7WUFDRjtRQUNGO1FBQ0FUO1FBQ0E7OztLQUdDLEdBQ0RVLG1CQUFtQixDQUFDQztZQUNsQmYsV0FBV2U7UUFDYjtRQUNBOzs7S0FHQyxHQUNEQyx3QkFBd0IsQ0FBQ0Q7WUFDdkJiLGdCQUFnQmE7UUFDbEI7UUFDQUUsY0FBYyxDQUFDRjtZQUNiWixhQUFhWTtRQUNmO0lBQ0Y7QUFDRjtBQUNBLElBQUlHLGdCQUFnQnJCO0FBS2xCLENBQ0YseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8veHNjYW4tZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9ub3RpZnlNYW5hZ2VyLmpzPzFhMGQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL25vdGlmeU1hbmFnZXIudHNcbnZhciBkZWZhdWx0U2NoZWR1bGVyID0gKGNiKSA9PiBzZXRUaW1lb3V0KGNiLCAwKTtcbmZ1bmN0aW9uIGNyZWF0ZU5vdGlmeU1hbmFnZXIoKSB7XG4gIGxldCBxdWV1ZSA9IFtdO1xuICBsZXQgdHJhbnNhY3Rpb25zID0gMDtcbiAgbGV0IG5vdGlmeUZuID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgY2FsbGJhY2soKTtcbiAgfTtcbiAgbGV0IGJhdGNoTm90aWZ5Rm4gPSAoY2FsbGJhY2spID0+IHtcbiAgICBjYWxsYmFjaygpO1xuICB9O1xuICBsZXQgc2NoZWR1bGVGbiA9IGRlZmF1bHRTY2hlZHVsZXI7XG4gIGNvbnN0IHNjaGVkdWxlID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgaWYgKHRyYW5zYWN0aW9ucykge1xuICAgICAgcXVldWUucHVzaChjYWxsYmFjayk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNjaGVkdWxlRm4oKCkgPT4ge1xuICAgICAgICBub3RpZnlGbihjYWxsYmFjayk7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IGZsdXNoID0gKCkgPT4ge1xuICAgIGNvbnN0IG9yaWdpbmFsUXVldWUgPSBxdWV1ZTtcbiAgICBxdWV1ZSA9IFtdO1xuICAgIGlmIChvcmlnaW5hbFF1ZXVlLmxlbmd0aCkge1xuICAgICAgc2NoZWR1bGVGbigoKSA9PiB7XG4gICAgICAgIGJhdGNoTm90aWZ5Rm4oKCkgPT4ge1xuICAgICAgICAgIG9yaWdpbmFsUXVldWUuZm9yRWFjaCgoY2FsbGJhY2spID0+IHtcbiAgICAgICAgICAgIG5vdGlmeUZuKGNhbGxiYWNrKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB7XG4gICAgYmF0Y2g6IChjYWxsYmFjaykgPT4ge1xuICAgICAgbGV0IHJlc3VsdDtcbiAgICAgIHRyYW5zYWN0aW9ucysrO1xuICAgICAgdHJ5IHtcbiAgICAgICAgcmVzdWx0ID0gY2FsbGJhY2soKTtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIHRyYW5zYWN0aW9ucy0tO1xuICAgICAgICBpZiAoIXRyYW5zYWN0aW9ucykge1xuICAgICAgICAgIGZsdXNoKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSxcbiAgICAvKipcbiAgICAgKiBBbGwgY2FsbHMgdG8gdGhlIHdyYXBwZWQgZnVuY3Rpb24gd2lsbCBiZSBiYXRjaGVkLlxuICAgICAqL1xuICAgIGJhdGNoQ2FsbHM6IChjYWxsYmFjaykgPT4ge1xuICAgICAgcmV0dXJuICguLi5hcmdzKSA9PiB7XG4gICAgICAgIHNjaGVkdWxlKCgpID0+IHtcbiAgICAgICAgICBjYWxsYmFjayguLi5hcmdzKTtcbiAgICAgICAgfSk7XG4gICAgICB9O1xuICAgIH0sXG4gICAgc2NoZWR1bGUsXG4gICAgLyoqXG4gICAgICogVXNlIHRoaXMgbWV0aG9kIHRvIHNldCBhIGN1c3RvbSBub3RpZnkgZnVuY3Rpb24uXG4gICAgICogVGhpcyBjYW4gYmUgdXNlZCB0byBmb3IgZXhhbXBsZSB3cmFwIG5vdGlmaWNhdGlvbnMgd2l0aCBgUmVhY3QuYWN0YCB3aGlsZSBydW5uaW5nIHRlc3RzLlxuICAgICAqL1xuICAgIHNldE5vdGlmeUZ1bmN0aW9uOiAoZm4pID0+IHtcbiAgICAgIG5vdGlmeUZuID0gZm47XG4gICAgfSxcbiAgICAvKipcbiAgICAgKiBVc2UgdGhpcyBtZXRob2QgdG8gc2V0IGEgY3VzdG9tIGZ1bmN0aW9uIHRvIGJhdGNoIG5vdGlmaWNhdGlvbnMgdG9nZXRoZXIgaW50byBhIHNpbmdsZSB0aWNrLlxuICAgICAqIEJ5IGRlZmF1bHQgUmVhY3QgUXVlcnkgd2lsbCB1c2UgdGhlIGJhdGNoIGZ1bmN0aW9uIHByb3ZpZGVkIGJ5IFJlYWN0RE9NIG9yIFJlYWN0IE5hdGl2ZS5cbiAgICAgKi9cbiAgICBzZXRCYXRjaE5vdGlmeUZ1bmN0aW9uOiAoZm4pID0+IHtcbiAgICAgIGJhdGNoTm90aWZ5Rm4gPSBmbjtcbiAgICB9LFxuICAgIHNldFNjaGVkdWxlcjogKGZuKSA9PiB7XG4gICAgICBzY2hlZHVsZUZuID0gZm47XG4gICAgfVxuICB9O1xufVxudmFyIG5vdGlmeU1hbmFnZXIgPSBjcmVhdGVOb3RpZnlNYW5hZ2VyKCk7XG5leHBvcnQge1xuICBjcmVhdGVOb3RpZnlNYW5hZ2VyLFxuICBkZWZhdWx0U2NoZWR1bGVyLFxuICBub3RpZnlNYW5hZ2VyXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm90aWZ5TWFuYWdlci5qcy5tYXAiXSwibmFtZXMiOlsiZGVmYXVsdFNjaGVkdWxlciIsImNiIiwic2V0VGltZW91dCIsImNyZWF0ZU5vdGlmeU1hbmFnZXIiLCJxdWV1ZSIsInRyYW5zYWN0aW9ucyIsIm5vdGlmeUZuIiwiY2FsbGJhY2siLCJiYXRjaE5vdGlmeUZuIiwic2NoZWR1bGVGbiIsInNjaGVkdWxlIiwicHVzaCIsImZsdXNoIiwib3JpZ2luYWxRdWV1ZSIsImxlbmd0aCIsImZvckVhY2giLCJiYXRjaCIsInJlc3VsdCIsImJhdGNoQ2FsbHMiLCJhcmdzIiwic2V0Tm90aWZ5RnVuY3Rpb24iLCJmbiIsInNldEJhdGNoTm90aWZ5RnVuY3Rpb24iLCJzZXRTY2hlZHVsZXIiLCJub3RpZnlNYW5hZ2VyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/notifyManager.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/onlineManager.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/onlineManager.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OnlineManager: () => (/* binding */ OnlineManager),\n/* harmony export */   onlineManager: () => (/* binding */ onlineManager)\n/* harmony export */ });\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/subscribable.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/onlineManager.ts\n\n\nvar OnlineManager = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n    #online;\n    #cleanup;\n    #setup;\n    constructor(){\n        super();\n        this.#online = true;\n        this.#setup = (onOnline)=>{\n            if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__.isServer && window.addEventListener) {\n                const onlineListener = ()=>onOnline(true);\n                const offlineListener = ()=>onOnline(false);\n                window.addEventListener(\"online\", onlineListener, false);\n                window.addEventListener(\"offline\", offlineListener, false);\n                return ()=>{\n                    window.removeEventListener(\"online\", onlineListener);\n                    window.removeEventListener(\"offline\", offlineListener);\n                };\n            }\n            return;\n        };\n    }\n    onSubscribe() {\n        if (!this.#cleanup) {\n            this.setEventListener(this.#setup);\n        }\n    }\n    onUnsubscribe() {\n        if (!this.hasListeners()) {\n            this.#cleanup?.();\n            this.#cleanup = void 0;\n        }\n    }\n    setEventListener(setup) {\n        this.#setup = setup;\n        this.#cleanup?.();\n        this.#cleanup = setup(this.setOnline.bind(this));\n    }\n    setOnline(online) {\n        const changed = this.#online !== online;\n        if (changed) {\n            this.#online = online;\n            this.listeners.forEach((listener)=>{\n                listener(online);\n            });\n        }\n    }\n    isOnline() {\n        return this.#online;\n    }\n};\nvar onlineManager = new OnlineManager();\n //# sourceMappingURL=onlineManager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9vbmxpbmVNYW5hZ2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSx1QkFBdUI7QUFDMEI7QUFDWDtBQUN0QyxJQUFJRSxnQkFBZ0IsY0FBY0YsMERBQVlBO0lBQzVDLENBQUNHLE1BQU0sQ0FBUTtJQUNmLENBQUNDLE9BQU8sQ0FBQztJQUNULENBQUNDLEtBQUssQ0FBQztJQUNQQyxhQUFjO1FBQ1osS0FBSzthQUpQLENBQUNILE1BQU0sR0FBRztRQUtSLElBQUksQ0FBQyxDQUFDRSxLQUFLLEdBQUcsQ0FBQ0U7WUFDYixJQUFJLENBQUNOLCtDQUFRQSxJQUFJTyxPQUFPQyxnQkFBZ0IsRUFBRTtnQkFDeEMsTUFBTUMsaUJBQWlCLElBQU1ILFNBQVM7Z0JBQ3RDLE1BQU1JLGtCQUFrQixJQUFNSixTQUFTO2dCQUN2Q0MsT0FBT0MsZ0JBQWdCLENBQUMsVUFBVUMsZ0JBQWdCO2dCQUNsREYsT0FBT0MsZ0JBQWdCLENBQUMsV0FBV0UsaUJBQWlCO2dCQUNwRCxPQUFPO29CQUNMSCxPQUFPSSxtQkFBbUIsQ0FBQyxVQUFVRjtvQkFDckNGLE9BQU9JLG1CQUFtQixDQUFDLFdBQVdEO2dCQUN4QztZQUNGO1lBQ0E7UUFDRjtJQUNGO0lBQ0FFLGNBQWM7UUFDWixJQUFJLENBQUMsSUFBSSxDQUFDLENBQUNULE9BQU8sRUFBRTtZQUNsQixJQUFJLENBQUNVLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDVCxLQUFLO1FBQ25DO0lBQ0Y7SUFDQVUsZ0JBQWdCO1FBQ2QsSUFBSSxDQUFDLElBQUksQ0FBQ0MsWUFBWSxJQUFJO1lBQ3hCLElBQUksQ0FBQyxDQUFDWixPQUFPO1lBQ2IsSUFBSSxDQUFDLENBQUNBLE9BQU8sR0FBRyxLQUFLO1FBQ3ZCO0lBQ0Y7SUFDQVUsaUJBQWlCVCxLQUFLLEVBQUU7UUFDdEIsSUFBSSxDQUFDLENBQUNBLEtBQUssR0FBR0E7UUFDZCxJQUFJLENBQUMsQ0FBQ0QsT0FBTztRQUNiLElBQUksQ0FBQyxDQUFDQSxPQUFPLEdBQUdDLE1BQU0sSUFBSSxDQUFDWSxTQUFTLENBQUNDLElBQUksQ0FBQyxJQUFJO0lBQ2hEO0lBQ0FELFVBQVVkLE1BQU0sRUFBRTtRQUNoQixNQUFNZ0IsVUFBVSxJQUFJLENBQUMsQ0FBQ2hCLE1BQU0sS0FBS0E7UUFDakMsSUFBSWdCLFNBQVM7WUFDWCxJQUFJLENBQUMsQ0FBQ2hCLE1BQU0sR0FBR0E7WUFDZixJQUFJLENBQUNpQixTQUFTLENBQUNDLE9BQU8sQ0FBQyxDQUFDQztnQkFDdEJBLFNBQVNuQjtZQUNYO1FBQ0Y7SUFDRjtJQUNBb0IsV0FBVztRQUNULE9BQU8sSUFBSSxDQUFDLENBQUNwQixNQUFNO0lBQ3JCO0FBQ0Y7QUFDQSxJQUFJcUIsZ0JBQWdCLElBQUl0QjtBQUl0QixDQUNGLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL3hzY2FuLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vb25saW5lTWFuYWdlci5qcz84MzgzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9vbmxpbmVNYW5hZ2VyLnRzXG5pbXBvcnQgeyBTdWJzY3JpYmFibGUgfSBmcm9tIFwiLi9zdWJzY3JpYmFibGUuanNcIjtcbmltcG9ydCB7IGlzU2VydmVyIH0gZnJvbSBcIi4vdXRpbHMuanNcIjtcbnZhciBPbmxpbmVNYW5hZ2VyID0gY2xhc3MgZXh0ZW5kcyBTdWJzY3JpYmFibGUge1xuICAjb25saW5lID0gdHJ1ZTtcbiAgI2NsZWFudXA7XG4gICNzZXR1cDtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLiNzZXR1cCA9IChvbk9ubGluZSkgPT4ge1xuICAgICAgaWYgKCFpc1NlcnZlciAmJiB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgICBjb25zdCBvbmxpbmVMaXN0ZW5lciA9ICgpID0+IG9uT25saW5lKHRydWUpO1xuICAgICAgICBjb25zdCBvZmZsaW5lTGlzdGVuZXIgPSAoKSA9PiBvbk9ubGluZShmYWxzZSk7XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwib25saW5lXCIsIG9ubGluZUxpc3RlbmVyLCBmYWxzZSk7XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwib2ZmbGluZVwiLCBvZmZsaW5lTGlzdGVuZXIsIGZhbHNlKTtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm9ubGluZVwiLCBvbmxpbmVMaXN0ZW5lcik7XG4gICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJvZmZsaW5lXCIsIG9mZmxpbmVMaXN0ZW5lcik7XG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICByZXR1cm47XG4gICAgfTtcbiAgfVxuICBvblN1YnNjcmliZSgpIHtcbiAgICBpZiAoIXRoaXMuI2NsZWFudXApIHtcbiAgICAgIHRoaXMuc2V0RXZlbnRMaXN0ZW5lcih0aGlzLiNzZXR1cCk7XG4gICAgfVxuICB9XG4gIG9uVW5zdWJzY3JpYmUoKSB7XG4gICAgaWYgKCF0aGlzLmhhc0xpc3RlbmVycygpKSB7XG4gICAgICB0aGlzLiNjbGVhbnVwPy4oKTtcbiAgICAgIHRoaXMuI2NsZWFudXAgPSB2b2lkIDA7XG4gICAgfVxuICB9XG4gIHNldEV2ZW50TGlzdGVuZXIoc2V0dXApIHtcbiAgICB0aGlzLiNzZXR1cCA9IHNldHVwO1xuICAgIHRoaXMuI2NsZWFudXA/LigpO1xuICAgIHRoaXMuI2NsZWFudXAgPSBzZXR1cCh0aGlzLnNldE9ubGluZS5iaW5kKHRoaXMpKTtcbiAgfVxuICBzZXRPbmxpbmUob25saW5lKSB7XG4gICAgY29uc3QgY2hhbmdlZCA9IHRoaXMuI29ubGluZSAhPT0gb25saW5lO1xuICAgIGlmIChjaGFuZ2VkKSB7XG4gICAgICB0aGlzLiNvbmxpbmUgPSBvbmxpbmU7XG4gICAgICB0aGlzLmxpc3RlbmVycy5mb3JFYWNoKChsaXN0ZW5lcikgPT4ge1xuICAgICAgICBsaXN0ZW5lcihvbmxpbmUpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG4gIGlzT25saW5lKCkge1xuICAgIHJldHVybiB0aGlzLiNvbmxpbmU7XG4gIH1cbn07XG52YXIgb25saW5lTWFuYWdlciA9IG5ldyBPbmxpbmVNYW5hZ2VyKCk7XG5leHBvcnQge1xuICBPbmxpbmVNYW5hZ2VyLFxuICBvbmxpbmVNYW5hZ2VyXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b25saW5lTWFuYWdlci5qcy5tYXAiXSwibmFtZXMiOlsiU3Vic2NyaWJhYmxlIiwiaXNTZXJ2ZXIiLCJPbmxpbmVNYW5hZ2VyIiwib25saW5lIiwiY2xlYW51cCIsInNldHVwIiwiY29uc3RydWN0b3IiLCJvbk9ubGluZSIsIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJvbmxpbmVMaXN0ZW5lciIsIm9mZmxpbmVMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJvblN1YnNjcmliZSIsInNldEV2ZW50TGlzdGVuZXIiLCJvblVuc3Vic2NyaWJlIiwiaGFzTGlzdGVuZXJzIiwic2V0T25saW5lIiwiYmluZCIsImNoYW5nZWQiLCJsaXN0ZW5lcnMiLCJmb3JFYWNoIiwibGlzdGVuZXIiLCJpc09ubGluZSIsIm9ubGluZU1hbmFnZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/onlineManager.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/query.js":
/*!******************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/query.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Query: () => (/* binding */ Query),\n/* harmony export */   fetchState: () => (/* binding */ fetchState)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./notifyManager.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _retryer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./retryer.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/retryer.js\");\n/* harmony import */ var _removable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./removable.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/removable.js\");\n// src/query.ts\n\n\n\n\nvar Query = class extends _removable_js__WEBPACK_IMPORTED_MODULE_0__.Removable {\n    #initialState;\n    #revertState;\n    #cache;\n    #client;\n    #retryer;\n    #defaultOptions;\n    #abortSignalConsumed;\n    constructor(config){\n        super();\n        this.#abortSignalConsumed = false;\n        this.#defaultOptions = config.defaultOptions;\n        this.setOptions(config.options);\n        this.observers = [];\n        this.#client = config.client;\n        this.#cache = this.#client.getQueryCache();\n        this.queryKey = config.queryKey;\n        this.queryHash = config.queryHash;\n        this.#initialState = getDefaultState(this.options);\n        this.state = config.state ?? this.#initialState;\n        this.scheduleGc();\n    }\n    get meta() {\n        return this.options.meta;\n    }\n    get promise() {\n        return this.#retryer?.promise;\n    }\n    setOptions(options) {\n        this.options = {\n            ...this.#defaultOptions,\n            ...options\n        };\n        this.updateGcTime(this.options.gcTime);\n    }\n    optionalRemove() {\n        if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n            this.#cache.remove(this);\n        }\n    }\n    setData(newData, options) {\n        const data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.replaceData)(this.state.data, newData, this.options);\n        this.#dispatch({\n            data,\n            type: \"success\",\n            dataUpdatedAt: options?.updatedAt,\n            manual: options?.manual\n        });\n        return data;\n    }\n    setState(state, setStateOptions) {\n        this.#dispatch({\n            type: \"setState\",\n            state,\n            setStateOptions\n        });\n    }\n    cancel(options) {\n        const promise = this.#retryer?.promise;\n        this.#retryer?.cancel(options);\n        return promise ? promise.then(_utils_js__WEBPACK_IMPORTED_MODULE_1__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_1__.noop) : Promise.resolve();\n    }\n    destroy() {\n        super.destroy();\n        this.cancel({\n            silent: true\n        });\n    }\n    reset() {\n        this.destroy();\n        this.setState(this.#initialState);\n    }\n    isActive() {\n        return this.observers.some((observer)=>(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.resolveEnabled)(observer.options.enabled, this) !== false);\n    }\n    isDisabled() {\n        if (this.getObserversCount() > 0) {\n            return !this.isActive();\n        }\n        return this.options.queryFn === _utils_js__WEBPACK_IMPORTED_MODULE_1__.skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n    }\n    isStatic() {\n        if (this.getObserversCount() > 0) {\n            return this.observers.some((observer)=>(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.resolveStaleTime)(observer.options.staleTime, this) === \"static\");\n        }\n        return false;\n    }\n    isStale() {\n        if (this.getObserversCount() > 0) {\n            return this.observers.some((observer)=>observer.getCurrentResult().isStale);\n        }\n        return this.state.data === void 0 || this.state.isInvalidated;\n    }\n    isStaleByTime(staleTime = 0) {\n        if (this.state.data === void 0) {\n            return true;\n        }\n        if (staleTime === \"static\") {\n            return false;\n        }\n        if (this.state.isInvalidated) {\n            return true;\n        }\n        return !(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.timeUntilStale)(this.state.dataUpdatedAt, staleTime);\n    }\n    onFocus() {\n        const observer = this.observers.find((x)=>x.shouldFetchOnWindowFocus());\n        observer?.refetch({\n            cancelRefetch: false\n        });\n        this.#retryer?.continue();\n    }\n    onOnline() {\n        const observer = this.observers.find((x)=>x.shouldFetchOnReconnect());\n        observer?.refetch({\n            cancelRefetch: false\n        });\n        this.#retryer?.continue();\n    }\n    addObserver(observer) {\n        if (!this.observers.includes(observer)) {\n            this.observers.push(observer);\n            this.clearGcTimeout();\n            this.#cache.notify({\n                type: \"observerAdded\",\n                query: this,\n                observer\n            });\n        }\n    }\n    removeObserver(observer) {\n        if (this.observers.includes(observer)) {\n            this.observers = this.observers.filter((x)=>x !== observer);\n            if (!this.observers.length) {\n                if (this.#retryer) {\n                    if (this.#abortSignalConsumed) {\n                        this.#retryer.cancel({\n                            revert: true\n                        });\n                    } else {\n                        this.#retryer.cancelRetry();\n                    }\n                }\n                this.scheduleGc();\n            }\n            this.#cache.notify({\n                type: \"observerRemoved\",\n                query: this,\n                observer\n            });\n        }\n    }\n    getObserversCount() {\n        return this.observers.length;\n    }\n    invalidate() {\n        if (!this.state.isInvalidated) {\n            this.#dispatch({\n                type: \"invalidate\"\n            });\n        }\n    }\n    fetch(options, fetchOptions) {\n        if (this.state.fetchStatus !== \"idle\") {\n            if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n                this.cancel({\n                    silent: true\n                });\n            } else if (this.#retryer) {\n                this.#retryer.continueRetry();\n                return this.#retryer.promise;\n            }\n        }\n        if (options) {\n            this.setOptions(options);\n        }\n        if (!this.options.queryFn) {\n            const observer = this.observers.find((x)=>x.options.queryFn);\n            if (observer) {\n                this.setOptions(observer.options);\n            }\n        }\n        if (true) {\n            if (!Array.isArray(this.options.queryKey)) {\n                console.error(`As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`);\n            }\n        }\n        const abortController = new AbortController();\n        const addSignalProperty = (object)=>{\n            Object.defineProperty(object, \"signal\", {\n                enumerable: true,\n                get: ()=>{\n                    this.#abortSignalConsumed = true;\n                    return abortController.signal;\n                }\n            });\n        };\n        const fetchFn = ()=>{\n            const queryFn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.ensureQueryFn)(this.options, fetchOptions);\n            const createQueryFnContext = ()=>{\n                const queryFnContext2 = {\n                    client: this.#client,\n                    queryKey: this.queryKey,\n                    meta: this.meta\n                };\n                addSignalProperty(queryFnContext2);\n                return queryFnContext2;\n            };\n            const queryFnContext = createQueryFnContext();\n            this.#abortSignalConsumed = false;\n            if (this.options.persister) {\n                return this.options.persister(queryFn, queryFnContext, this);\n            }\n            return queryFn(queryFnContext);\n        };\n        const createFetchContext = ()=>{\n            const context2 = {\n                fetchOptions,\n                options: this.options,\n                queryKey: this.queryKey,\n                client: this.#client,\n                state: this.state,\n                fetchFn\n            };\n            addSignalProperty(context2);\n            return context2;\n        };\n        const context = createFetchContext();\n        this.options.behavior?.onFetch(context, this);\n        this.#revertState = this.state;\n        if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n            this.#dispatch({\n                type: \"fetch\",\n                meta: context.fetchOptions?.meta\n            });\n        }\n        const onError = (error)=>{\n            if (!((0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.isCancelledError)(error) && error.silent)) {\n                this.#dispatch({\n                    type: \"error\",\n                    error\n                });\n            }\n            if (!(0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.isCancelledError)(error)) {\n                this.#cache.config.onError?.(error, this);\n                this.#cache.config.onSettled?.(this.state.data, error, this);\n            }\n            this.scheduleGc();\n        };\n        this.#retryer = (0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.createRetryer)({\n            initialPromise: fetchOptions?.initialPromise,\n            fn: context.fetchFn,\n            abort: abortController.abort.bind(abortController),\n            onSuccess: (data)=>{\n                if (data === void 0) {\n                    if (true) {\n                        console.error(`Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`);\n                    }\n                    onError(new Error(`${this.queryHash} data is undefined`));\n                    return;\n                }\n                try {\n                    this.setData(data);\n                } catch (error) {\n                    onError(error);\n                    return;\n                }\n                this.#cache.config.onSuccess?.(data, this);\n                this.#cache.config.onSettled?.(data, this.state.error, this);\n                this.scheduleGc();\n            },\n            onError,\n            onFail: (failureCount, error)=>{\n                this.#dispatch({\n                    type: \"failed\",\n                    failureCount,\n                    error\n                });\n            },\n            onPause: ()=>{\n                this.#dispatch({\n                    type: \"pause\"\n                });\n            },\n            onContinue: ()=>{\n                this.#dispatch({\n                    type: \"continue\"\n                });\n            },\n            retry: context.options.retry,\n            retryDelay: context.options.retryDelay,\n            networkMode: context.options.networkMode,\n            canRun: ()=>true\n        });\n        return this.#retryer.start();\n    }\n    #dispatch(action) {\n        const reducer = (state)=>{\n            switch(action.type){\n                case \"failed\":\n                    return {\n                        ...state,\n                        fetchFailureCount: action.failureCount,\n                        fetchFailureReason: action.error\n                    };\n                case \"pause\":\n                    return {\n                        ...state,\n                        fetchStatus: \"paused\"\n                    };\n                case \"continue\":\n                    return {\n                        ...state,\n                        fetchStatus: \"fetching\"\n                    };\n                case \"fetch\":\n                    return {\n                        ...state,\n                        ...fetchState(state.data, this.options),\n                        fetchMeta: action.meta ?? null\n                    };\n                case \"success\":\n                    this.#revertState = void 0;\n                    return {\n                        ...state,\n                        data: action.data,\n                        dataUpdateCount: state.dataUpdateCount + 1,\n                        dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n                        error: null,\n                        isInvalidated: false,\n                        status: \"success\",\n                        ...!action.manual && {\n                            fetchStatus: \"idle\",\n                            fetchFailureCount: 0,\n                            fetchFailureReason: null\n                        }\n                    };\n                case \"error\":\n                    const error = action.error;\n                    if ((0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.isCancelledError)(error) && error.revert && this.#revertState) {\n                        return {\n                            ...this.#revertState,\n                            fetchStatus: \"idle\"\n                        };\n                    }\n                    return {\n                        ...state,\n                        error,\n                        errorUpdateCount: state.errorUpdateCount + 1,\n                        errorUpdatedAt: Date.now(),\n                        fetchFailureCount: state.fetchFailureCount + 1,\n                        fetchFailureReason: error,\n                        fetchStatus: \"idle\",\n                        status: \"error\"\n                    };\n                case \"invalidate\":\n                    return {\n                        ...state,\n                        isInvalidated: true\n                    };\n                case \"setState\":\n                    return {\n                        ...state,\n                        ...action.state\n                    };\n            }\n        };\n        this.state = reducer(this.state);\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(()=>{\n            this.observers.forEach((observer)=>{\n                observer.onQueryUpdate();\n            });\n            this.#cache.notify({\n                query: this,\n                type: \"updated\",\n                action\n            });\n        });\n    }\n};\nfunction fetchState(data, options) {\n    return {\n        fetchFailureCount: 0,\n        fetchFailureReason: null,\n        fetchStatus: (0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.canFetch)(options.networkMode) ? \"fetching\" : \"paused\",\n        ...data === void 0 && {\n            error: null,\n            status: \"pending\"\n        }\n    };\n}\nfunction getDefaultState(options) {\n    const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n    const hasData = data !== void 0;\n    const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n    return {\n        data,\n        dataUpdateCount: 0,\n        dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n        error: null,\n        errorUpdateCount: 0,\n        errorUpdatedAt: 0,\n        fetchFailureCount: 0,\n        fetchFailureReason: null,\n        fetchMeta: null,\n        isInvalidated: false,\n        status: hasData ? \"success\" : \"pending\",\n        fetchStatus: \"idle\"\n    };\n}\n //# sourceMappingURL=query.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/query.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/queryCache.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/queryCache.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryCache: () => (/* binding */ QueryCache)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _query_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./query.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/query.js\");\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./notifyManager.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/subscribable.js\");\n// src/queryCache.ts\n\n\n\n\nvar QueryCache = class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n    constructor(config = {}){\n        super();\n        this.config = config;\n        this.#queries = /* @__PURE__ */ new Map();\n    }\n    #queries;\n    build(client, options, state) {\n        const queryKey = options.queryKey;\n        const queryHash = options.queryHash ?? (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.hashQueryKeyByOptions)(queryKey, options);\n        let query = this.get(queryHash);\n        if (!query) {\n            query = new _query_js__WEBPACK_IMPORTED_MODULE_2__.Query({\n                client,\n                queryKey,\n                queryHash,\n                options: client.defaultQueryOptions(options),\n                state,\n                defaultOptions: client.getQueryDefaults(queryKey)\n            });\n            this.add(query);\n        }\n        return query;\n    }\n    add(query) {\n        if (!this.#queries.has(query.queryHash)) {\n            this.#queries.set(query.queryHash, query);\n            this.notify({\n                type: \"added\",\n                query\n            });\n        }\n    }\n    remove(query) {\n        const queryInMap = this.#queries.get(query.queryHash);\n        if (queryInMap) {\n            query.destroy();\n            if (queryInMap === query) {\n                this.#queries.delete(query.queryHash);\n            }\n            this.notify({\n                type: \"removed\",\n                query\n            });\n        }\n    }\n    clear() {\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(()=>{\n            this.getAll().forEach((query)=>{\n                this.remove(query);\n            });\n        });\n    }\n    get(queryHash) {\n        return this.#queries.get(queryHash);\n    }\n    getAll() {\n        return [\n            ...this.#queries.values()\n        ];\n    }\n    find(filters) {\n        const defaultedFilters = {\n            exact: true,\n            ...filters\n        };\n        return this.getAll().find((query)=>(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.matchQuery)(defaultedFilters, query));\n    }\n    findAll(filters = {}) {\n        const queries = this.getAll();\n        return Object.keys(filters).length > 0 ? queries.filter((query)=>(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.matchQuery)(filters, query)) : queries;\n    }\n    notify(event) {\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(()=>{\n            this.listeners.forEach((listener)=>{\n                listener(event);\n            });\n        });\n    }\n    onFocus() {\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(()=>{\n            this.getAll().forEach((query)=>{\n                query.onFocus();\n            });\n        });\n    }\n    onOnline() {\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(()=>{\n            this.getAll().forEach((query)=>{\n                query.onOnline();\n            });\n        });\n    }\n};\n //# sourceMappingURL=queryCache.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9xdWVyeUNhY2hlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsb0JBQW9CO0FBQzJDO0FBQzVCO0FBQ2dCO0FBQ0Y7QUFDakQsSUFBSUssYUFBYSxjQUFjRCwwREFBWUE7SUFDekNFLFlBQVlDLFNBQVMsQ0FBQyxDQUFDLENBQUU7UUFDdkIsS0FBSztRQUNMLElBQUksQ0FBQ0EsTUFBTSxHQUFHQTtRQUNkLElBQUksQ0FBQyxDQUFDQyxPQUFPLEdBQUcsYUFBYSxHQUFHLElBQUlDO0lBQ3RDO0lBQ0EsQ0FBQ0QsT0FBTyxDQUFDO0lBQ1RFLE1BQU1DLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxLQUFLLEVBQUU7UUFDNUIsTUFBTUMsV0FBV0YsUUFBUUUsUUFBUTtRQUNqQyxNQUFNQyxZQUFZSCxRQUFRRyxTQUFTLElBQUlmLGdFQUFxQkEsQ0FBQ2MsVUFBVUY7UUFDdkUsSUFBSUksUUFBUSxJQUFJLENBQUNDLEdBQUcsQ0FBQ0Y7UUFDckIsSUFBSSxDQUFDQyxPQUFPO1lBQ1ZBLFFBQVEsSUFBSWQsNENBQUtBLENBQUM7Z0JBQ2hCUztnQkFDQUc7Z0JBQ0FDO2dCQUNBSCxTQUFTRCxPQUFPTyxtQkFBbUIsQ0FBQ047Z0JBQ3BDQztnQkFDQU0sZ0JBQWdCUixPQUFPUyxnQkFBZ0IsQ0FBQ047WUFDMUM7WUFDQSxJQUFJLENBQUNPLEdBQUcsQ0FBQ0w7UUFDWDtRQUNBLE9BQU9BO0lBQ1Q7SUFDQUssSUFBSUwsS0FBSyxFQUFFO1FBQ1QsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDUixPQUFPLENBQUNjLEdBQUcsQ0FBQ04sTUFBTUQsU0FBUyxHQUFHO1lBQ3ZDLElBQUksQ0FBQyxDQUFDUCxPQUFPLENBQUNlLEdBQUcsQ0FBQ1AsTUFBTUQsU0FBUyxFQUFFQztZQUNuQyxJQUFJLENBQUNRLE1BQU0sQ0FBQztnQkFDVkMsTUFBTTtnQkFDTlQ7WUFDRjtRQUNGO0lBQ0Y7SUFDQVUsT0FBT1YsS0FBSyxFQUFFO1FBQ1osTUFBTVcsYUFBYSxJQUFJLENBQUMsQ0FBQ25CLE9BQU8sQ0FBQ1MsR0FBRyxDQUFDRCxNQUFNRCxTQUFTO1FBQ3BELElBQUlZLFlBQVk7WUFDZFgsTUFBTVksT0FBTztZQUNiLElBQUlELGVBQWVYLE9BQU87Z0JBQ3hCLElBQUksQ0FBQyxDQUFDUixPQUFPLENBQUNxQixNQUFNLENBQUNiLE1BQU1ELFNBQVM7WUFDdEM7WUFDQSxJQUFJLENBQUNTLE1BQU0sQ0FBQztnQkFBRUMsTUFBTTtnQkFBV1Q7WUFBTTtRQUN2QztJQUNGO0lBQ0FjLFFBQVE7UUFDTjNCLDREQUFhQSxDQUFDNEIsS0FBSyxDQUFDO1lBQ2xCLElBQUksQ0FBQ0MsTUFBTSxHQUFHQyxPQUFPLENBQUMsQ0FBQ2pCO2dCQUNyQixJQUFJLENBQUNVLE1BQU0sQ0FBQ1Y7WUFDZDtRQUNGO0lBQ0Y7SUFDQUMsSUFBSUYsU0FBUyxFQUFFO1FBQ2IsT0FBTyxJQUFJLENBQUMsQ0FBQ1AsT0FBTyxDQUFDUyxHQUFHLENBQUNGO0lBQzNCO0lBQ0FpQixTQUFTO1FBQ1AsT0FBTztlQUFJLElBQUksQ0FBQyxDQUFDeEIsT0FBTyxDQUFDMEIsTUFBTTtTQUFHO0lBQ3BDO0lBQ0FDLEtBQUtDLE9BQU8sRUFBRTtRQUNaLE1BQU1DLG1CQUFtQjtZQUFFQyxPQUFPO1lBQU0sR0FBR0YsT0FBTztRQUFDO1FBQ25ELE9BQU8sSUFBSSxDQUFDSixNQUFNLEdBQUdHLElBQUksQ0FDdkIsQ0FBQ25CLFFBQVVmLHFEQUFVQSxDQUFDb0Msa0JBQWtCckI7SUFFNUM7SUFDQXVCLFFBQVFILFVBQVUsQ0FBQyxDQUFDLEVBQUU7UUFDcEIsTUFBTTVCLFVBQVUsSUFBSSxDQUFDd0IsTUFBTTtRQUMzQixPQUFPUSxPQUFPQyxJQUFJLENBQUNMLFNBQVNNLE1BQU0sR0FBRyxJQUFJbEMsUUFBUW1DLE1BQU0sQ0FBQyxDQUFDM0IsUUFBVWYscURBQVVBLENBQUNtQyxTQUFTcEIsVUFBVVI7SUFDbkc7SUFDQWdCLE9BQU9vQixLQUFLLEVBQUU7UUFDWnpDLDREQUFhQSxDQUFDNEIsS0FBSyxDQUFDO1lBQ2xCLElBQUksQ0FBQ2MsU0FBUyxDQUFDWixPQUFPLENBQUMsQ0FBQ2E7Z0JBQ3RCQSxTQUFTRjtZQUNYO1FBQ0Y7SUFDRjtJQUNBRyxVQUFVO1FBQ1I1Qyw0REFBYUEsQ0FBQzRCLEtBQUssQ0FBQztZQUNsQixJQUFJLENBQUNDLE1BQU0sR0FBR0MsT0FBTyxDQUFDLENBQUNqQjtnQkFDckJBLE1BQU0rQixPQUFPO1lBQ2Y7UUFDRjtJQUNGO0lBQ0FDLFdBQVc7UUFDVDdDLDREQUFhQSxDQUFDNEIsS0FBSyxDQUFDO1lBQ2xCLElBQUksQ0FBQ0MsTUFBTSxHQUFHQyxPQUFPLENBQUMsQ0FBQ2pCO2dCQUNyQkEsTUFBTWdDLFFBQVE7WUFDaEI7UUFDRjtJQUNGO0FBQ0Y7QUFHRSxDQUNGLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL3hzY2FuLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vcXVlcnlDYWNoZS5qcz80MjExIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9xdWVyeUNhY2hlLnRzXG5pbXBvcnQgeyBoYXNoUXVlcnlLZXlCeU9wdGlvbnMsIG1hdGNoUXVlcnkgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xuaW1wb3J0IHsgUXVlcnkgfSBmcm9tIFwiLi9xdWVyeS5qc1wiO1xuaW1wb3J0IHsgbm90aWZ5TWFuYWdlciB9IGZyb20gXCIuL25vdGlmeU1hbmFnZXIuanNcIjtcbmltcG9ydCB7IFN1YnNjcmliYWJsZSB9IGZyb20gXCIuL3N1YnNjcmliYWJsZS5qc1wiO1xudmFyIFF1ZXJ5Q2FjaGUgPSBjbGFzcyBleHRlbmRzIFN1YnNjcmliYWJsZSB7XG4gIGNvbnN0cnVjdG9yKGNvbmZpZyA9IHt9KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcbiAgICB0aGlzLiNxdWVyaWVzID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbiAgfVxuICAjcXVlcmllcztcbiAgYnVpbGQoY2xpZW50LCBvcHRpb25zLCBzdGF0ZSkge1xuICAgIGNvbnN0IHF1ZXJ5S2V5ID0gb3B0aW9ucy5xdWVyeUtleTtcbiAgICBjb25zdCBxdWVyeUhhc2ggPSBvcHRpb25zLnF1ZXJ5SGFzaCA/PyBoYXNoUXVlcnlLZXlCeU9wdGlvbnMocXVlcnlLZXksIG9wdGlvbnMpO1xuICAgIGxldCBxdWVyeSA9IHRoaXMuZ2V0KHF1ZXJ5SGFzaCk7XG4gICAgaWYgKCFxdWVyeSkge1xuICAgICAgcXVlcnkgPSBuZXcgUXVlcnkoe1xuICAgICAgICBjbGllbnQsXG4gICAgICAgIHF1ZXJ5S2V5LFxuICAgICAgICBxdWVyeUhhc2gsXG4gICAgICAgIG9wdGlvbnM6IGNsaWVudC5kZWZhdWx0UXVlcnlPcHRpb25zKG9wdGlvbnMpLFxuICAgICAgICBzdGF0ZSxcbiAgICAgICAgZGVmYXVsdE9wdGlvbnM6IGNsaWVudC5nZXRRdWVyeURlZmF1bHRzKHF1ZXJ5S2V5KVxuICAgICAgfSk7XG4gICAgICB0aGlzLmFkZChxdWVyeSk7XG4gICAgfVxuICAgIHJldHVybiBxdWVyeTtcbiAgfVxuICBhZGQocXVlcnkpIHtcbiAgICBpZiAoIXRoaXMuI3F1ZXJpZXMuaGFzKHF1ZXJ5LnF1ZXJ5SGFzaCkpIHtcbiAgICAgIHRoaXMuI3F1ZXJpZXMuc2V0KHF1ZXJ5LnF1ZXJ5SGFzaCwgcXVlcnkpO1xuICAgICAgdGhpcy5ub3RpZnkoe1xuICAgICAgICB0eXBlOiBcImFkZGVkXCIsXG4gICAgICAgIHF1ZXJ5XG4gICAgICB9KTtcbiAgICB9XG4gIH1cbiAgcmVtb3ZlKHF1ZXJ5KSB7XG4gICAgY29uc3QgcXVlcnlJbk1hcCA9IHRoaXMuI3F1ZXJpZXMuZ2V0KHF1ZXJ5LnF1ZXJ5SGFzaCk7XG4gICAgaWYgKHF1ZXJ5SW5NYXApIHtcbiAgICAgIHF1ZXJ5LmRlc3Ryb3koKTtcbiAgICAgIGlmIChxdWVyeUluTWFwID09PSBxdWVyeSkge1xuICAgICAgICB0aGlzLiNxdWVyaWVzLmRlbGV0ZShxdWVyeS5xdWVyeUhhc2gpO1xuICAgICAgfVxuICAgICAgdGhpcy5ub3RpZnkoeyB0eXBlOiBcInJlbW92ZWRcIiwgcXVlcnkgfSk7XG4gICAgfVxuICB9XG4gIGNsZWFyKCkge1xuICAgIG5vdGlmeU1hbmFnZXIuYmF0Y2goKCkgPT4ge1xuICAgICAgdGhpcy5nZXRBbGwoKS5mb3JFYWNoKChxdWVyeSkgPT4ge1xuICAgICAgICB0aGlzLnJlbW92ZShxdWVyeSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuICBnZXQocXVlcnlIYXNoKSB7XG4gICAgcmV0dXJuIHRoaXMuI3F1ZXJpZXMuZ2V0KHF1ZXJ5SGFzaCk7XG4gIH1cbiAgZ2V0QWxsKCkge1xuICAgIHJldHVybiBbLi4udGhpcy4jcXVlcmllcy52YWx1ZXMoKV07XG4gIH1cbiAgZmluZChmaWx0ZXJzKSB7XG4gICAgY29uc3QgZGVmYXVsdGVkRmlsdGVycyA9IHsgZXhhY3Q6IHRydWUsIC4uLmZpbHRlcnMgfTtcbiAgICByZXR1cm4gdGhpcy5nZXRBbGwoKS5maW5kKFxuICAgICAgKHF1ZXJ5KSA9PiBtYXRjaFF1ZXJ5KGRlZmF1bHRlZEZpbHRlcnMsIHF1ZXJ5KVxuICAgICk7XG4gIH1cbiAgZmluZEFsbChmaWx0ZXJzID0ge30pIHtcbiAgICBjb25zdCBxdWVyaWVzID0gdGhpcy5nZXRBbGwoKTtcbiAgICByZXR1cm4gT2JqZWN0LmtleXMoZmlsdGVycykubGVuZ3RoID4gMCA/IHF1ZXJpZXMuZmlsdGVyKChxdWVyeSkgPT4gbWF0Y2hRdWVyeShmaWx0ZXJzLCBxdWVyeSkpIDogcXVlcmllcztcbiAgfVxuICBub3RpZnkoZXZlbnQpIHtcbiAgICBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHtcbiAgICAgIHRoaXMubGlzdGVuZXJzLmZvckVhY2goKGxpc3RlbmVyKSA9PiB7XG4gICAgICAgIGxpc3RlbmVyKGV2ZW50KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIG9uRm9jdXMoKSB7XG4gICAgbm90aWZ5TWFuYWdlci5iYXRjaCgoKSA9PiB7XG4gICAgICB0aGlzLmdldEFsbCgpLmZvckVhY2goKHF1ZXJ5KSA9PiB7XG4gICAgICAgIHF1ZXJ5Lm9uRm9jdXMoKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIG9uT25saW5lKCkge1xuICAgIG5vdGlmeU1hbmFnZXIuYmF0Y2goKCkgPT4ge1xuICAgICAgdGhpcy5nZXRBbGwoKS5mb3JFYWNoKChxdWVyeSkgPT4ge1xuICAgICAgICBxdWVyeS5vbk9ubGluZSgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbn07XG5leHBvcnQge1xuICBRdWVyeUNhY2hlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cXVlcnlDYWNoZS5qcy5tYXAiXSwibmFtZXMiOlsiaGFzaFF1ZXJ5S2V5QnlPcHRpb25zIiwibWF0Y2hRdWVyeSIsIlF1ZXJ5Iiwibm90aWZ5TWFuYWdlciIsIlN1YnNjcmliYWJsZSIsIlF1ZXJ5Q2FjaGUiLCJjb25zdHJ1Y3RvciIsImNvbmZpZyIsInF1ZXJpZXMiLCJNYXAiLCJidWlsZCIsImNsaWVudCIsIm9wdGlvbnMiLCJzdGF0ZSIsInF1ZXJ5S2V5IiwicXVlcnlIYXNoIiwicXVlcnkiLCJnZXQiLCJkZWZhdWx0UXVlcnlPcHRpb25zIiwiZGVmYXVsdE9wdGlvbnMiLCJnZXRRdWVyeURlZmF1bHRzIiwiYWRkIiwiaGFzIiwic2V0Iiwibm90aWZ5IiwidHlwZSIsInJlbW92ZSIsInF1ZXJ5SW5NYXAiLCJkZXN0cm95IiwiZGVsZXRlIiwiY2xlYXIiLCJiYXRjaCIsImdldEFsbCIsImZvckVhY2giLCJ2YWx1ZXMiLCJmaW5kIiwiZmlsdGVycyIsImRlZmF1bHRlZEZpbHRlcnMiLCJleGFjdCIsImZpbmRBbGwiLCJPYmplY3QiLCJrZXlzIiwibGVuZ3RoIiwiZmlsdGVyIiwiZXZlbnQiLCJsaXN0ZW5lcnMiLCJsaXN0ZW5lciIsIm9uRm9jdXMiLCJvbk9ubGluZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/queryCache.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/queryClient.js":
/*!************************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/queryClient.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryClient: () => (/* binding */ QueryClient)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _queryCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./queryCache.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/queryCache.js\");\n/* harmony import */ var _mutationCache_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mutationCache.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/mutationCache.js\");\n/* harmony import */ var _focusManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./focusManager.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/focusManager.js\");\n/* harmony import */ var _onlineManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./onlineManager.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/onlineManager.js\");\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./notifyManager.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./infiniteQueryBehavior.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js\");\n// src/queryClient.ts\n\n\n\n\n\n\n\nvar QueryClient = class {\n    #queryCache;\n    #mutationCache;\n    #defaultOptions;\n    #queryDefaults;\n    #mutationDefaults;\n    #mountCount;\n    #unsubscribeFocus;\n    #unsubscribeOnline;\n    constructor(config = {}){\n        this.#queryCache = config.queryCache || new _queryCache_js__WEBPACK_IMPORTED_MODULE_0__.QueryCache();\n        this.#mutationCache = config.mutationCache || new _mutationCache_js__WEBPACK_IMPORTED_MODULE_1__.MutationCache();\n        this.#defaultOptions = config.defaultOptions || {};\n        this.#queryDefaults = /* @__PURE__ */ new Map();\n        this.#mutationDefaults = /* @__PURE__ */ new Map();\n        this.#mountCount = 0;\n    }\n    mount() {\n        this.#mountCount++;\n        if (this.#mountCount !== 1) return;\n        this.#unsubscribeFocus = _focusManager_js__WEBPACK_IMPORTED_MODULE_2__.focusManager.subscribe(async (focused)=>{\n            if (focused) {\n                await this.resumePausedMutations();\n                this.#queryCache.onFocus();\n            }\n        });\n        this.#unsubscribeOnline = _onlineManager_js__WEBPACK_IMPORTED_MODULE_3__.onlineManager.subscribe(async (online)=>{\n            if (online) {\n                await this.resumePausedMutations();\n                this.#queryCache.onOnline();\n            }\n        });\n    }\n    unmount() {\n        this.#mountCount--;\n        if (this.#mountCount !== 0) return;\n        this.#unsubscribeFocus?.();\n        this.#unsubscribeFocus = void 0;\n        this.#unsubscribeOnline?.();\n        this.#unsubscribeOnline = void 0;\n    }\n    isFetching(filters) {\n        return this.#queryCache.findAll({\n            ...filters,\n            fetchStatus: \"fetching\"\n        }).length;\n    }\n    isMutating(filters) {\n        return this.#mutationCache.findAll({\n            ...filters,\n            status: \"pending\"\n        }).length;\n    }\n    /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */ getQueryData(queryKey) {\n        const options = this.defaultQueryOptions({\n            queryKey\n        });\n        return this.#queryCache.get(options.queryHash)?.state.data;\n    }\n    ensureQueryData(options) {\n        const defaultedOptions = this.defaultQueryOptions(options);\n        const query = this.#queryCache.build(this, defaultedOptions);\n        const cachedData = query.state.data;\n        if (cachedData === void 0) {\n            return this.fetchQuery(options);\n        }\n        if (options.revalidateIfStale && query.isStaleByTime((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.resolveStaleTime)(defaultedOptions.staleTime, query))) {\n            void this.prefetchQuery(defaultedOptions);\n        }\n        return Promise.resolve(cachedData);\n    }\n    getQueriesData(filters) {\n        return this.#queryCache.findAll(filters).map(({ queryKey, state })=>{\n            const data = state.data;\n            return [\n                queryKey,\n                data\n            ];\n        });\n    }\n    setQueryData(queryKey, updater, options) {\n        const defaultedOptions = this.defaultQueryOptions({\n            queryKey\n        });\n        const query = this.#queryCache.get(defaultedOptions.queryHash);\n        const prevData = query?.state.data;\n        const data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.functionalUpdate)(updater, prevData);\n        if (data === void 0) {\n            return void 0;\n        }\n        return this.#queryCache.build(this, defaultedOptions).setData(data, {\n            ...options,\n            manual: true\n        });\n    }\n    setQueriesData(filters, updater, options) {\n        return _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(()=>this.#queryCache.findAll(filters).map(({ queryKey })=>[\n                    queryKey,\n                    this.setQueryData(queryKey, updater, options)\n                ]));\n    }\n    getQueryState(queryKey) {\n        const options = this.defaultQueryOptions({\n            queryKey\n        });\n        return this.#queryCache.get(options.queryHash)?.state;\n    }\n    removeQueries(filters) {\n        const queryCache = this.#queryCache;\n        _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(()=>{\n            queryCache.findAll(filters).forEach((query)=>{\n                queryCache.remove(query);\n            });\n        });\n    }\n    resetQueries(filters, options) {\n        const queryCache = this.#queryCache;\n        return _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(()=>{\n            queryCache.findAll(filters).forEach((query)=>{\n                query.reset();\n            });\n            return this.refetchQueries({\n                type: \"active\",\n                ...filters\n            }, options);\n        });\n    }\n    cancelQueries(filters, cancelOptions = {}) {\n        const defaultedCancelOptions = {\n            revert: true,\n            ...cancelOptions\n        };\n        const promises = _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(()=>this.#queryCache.findAll(filters).map((query)=>query.cancel(defaultedCancelOptions)));\n        return Promise.all(promises).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n    }\n    invalidateQueries(filters, options = {}) {\n        return _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(()=>{\n            this.#queryCache.findAll(filters).forEach((query)=>{\n                query.invalidate();\n            });\n            if (filters?.refetchType === \"none\") {\n                return Promise.resolve();\n            }\n            return this.refetchQueries({\n                ...filters,\n                type: filters?.refetchType ?? filters?.type ?? \"active\"\n            }, options);\n        });\n    }\n    refetchQueries(filters, options = {}) {\n        const fetchOptions = {\n            ...options,\n            cancelRefetch: options.cancelRefetch ?? true\n        };\n        const promises = _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(()=>this.#queryCache.findAll(filters).filter((query)=>!query.isDisabled() && !query.isStatic()).map((query)=>{\n                let promise = query.fetch(void 0, fetchOptions);\n                if (!fetchOptions.throwOnError) {\n                    promise = promise.catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n                }\n                return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n            }));\n        return Promise.all(promises).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n    }\n    fetchQuery(options) {\n        const defaultedOptions = this.defaultQueryOptions(options);\n        if (defaultedOptions.retry === void 0) {\n            defaultedOptions.retry = false;\n        }\n        const query = this.#queryCache.build(this, defaultedOptions);\n        return query.isStaleByTime((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.resolveStaleTime)(defaultedOptions.staleTime, query)) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n    }\n    prefetchQuery(options) {\n        return this.fetchQuery(options).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n    }\n    fetchInfiniteQuery(options) {\n        options.behavior = (0,_infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_6__.infiniteQueryBehavior)(options.pages);\n        return this.fetchQuery(options);\n    }\n    prefetchInfiniteQuery(options) {\n        return this.fetchInfiniteQuery(options).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n    }\n    ensureInfiniteQueryData(options) {\n        options.behavior = (0,_infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_6__.infiniteQueryBehavior)(options.pages);\n        return this.ensureQueryData(options);\n    }\n    resumePausedMutations() {\n        if (_onlineManager_js__WEBPACK_IMPORTED_MODULE_3__.onlineManager.isOnline()) {\n            return this.#mutationCache.resumePausedMutations();\n        }\n        return Promise.resolve();\n    }\n    getQueryCache() {\n        return this.#queryCache;\n    }\n    getMutationCache() {\n        return this.#mutationCache;\n    }\n    getDefaultOptions() {\n        return this.#defaultOptions;\n    }\n    setDefaultOptions(options) {\n        this.#defaultOptions = options;\n    }\n    setQueryDefaults(queryKey, options) {\n        this.#queryDefaults.set((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.hashKey)(queryKey), {\n            queryKey,\n            defaultOptions: options\n        });\n    }\n    getQueryDefaults(queryKey) {\n        const defaults = [\n            ...this.#queryDefaults.values()\n        ];\n        const result = {};\n        defaults.forEach((queryDefault)=>{\n            if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.partialMatchKey)(queryKey, queryDefault.queryKey)) {\n                Object.assign(result, queryDefault.defaultOptions);\n            }\n        });\n        return result;\n    }\n    setMutationDefaults(mutationKey, options) {\n        this.#mutationDefaults.set((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.hashKey)(mutationKey), {\n            mutationKey,\n            defaultOptions: options\n        });\n    }\n    getMutationDefaults(mutationKey) {\n        const defaults = [\n            ...this.#mutationDefaults.values()\n        ];\n        const result = {};\n        defaults.forEach((queryDefault)=>{\n            if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.partialMatchKey)(mutationKey, queryDefault.mutationKey)) {\n                Object.assign(result, queryDefault.defaultOptions);\n            }\n        });\n        return result;\n    }\n    defaultQueryOptions(options) {\n        if (options._defaulted) {\n            return options;\n        }\n        const defaultedOptions = {\n            ...this.#defaultOptions.queries,\n            ...this.getQueryDefaults(options.queryKey),\n            ...options,\n            _defaulted: true\n        };\n        if (!defaultedOptions.queryHash) {\n            defaultedOptions.queryHash = (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.hashQueryKeyByOptions)(defaultedOptions.queryKey, defaultedOptions);\n        }\n        if (defaultedOptions.refetchOnReconnect === void 0) {\n            defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n        }\n        if (defaultedOptions.throwOnError === void 0) {\n            defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n        }\n        if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n            defaultedOptions.networkMode = \"offlineFirst\";\n        }\n        if (defaultedOptions.queryFn === _utils_js__WEBPACK_IMPORTED_MODULE_4__.skipToken) {\n            defaultedOptions.enabled = false;\n        }\n        return defaultedOptions;\n    }\n    defaultMutationOptions(options) {\n        if (options?._defaulted) {\n            return options;\n        }\n        return {\n            ...this.#defaultOptions.mutations,\n            ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n            ...options,\n            _defaulted: true\n        };\n    }\n    clear() {\n        this.#queryCache.clear();\n        this.#mutationCache.clear();\n    }\n};\n //# sourceMappingURL=queryClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/queryClient.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/removable.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/removable.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Removable: () => (/* binding */ Removable)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/removable.ts\n\nvar Removable = class {\n    #gcTimeout;\n    destroy() {\n        this.clearGcTimeout();\n    }\n    scheduleGc() {\n        this.clearGcTimeout();\n        if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.isValidTimeout)(this.gcTime)) {\n            this.#gcTimeout = setTimeout(()=>{\n                this.optionalRemove();\n            }, this.gcTime);\n        }\n    }\n    updateGcTime(newGcTime) {\n        this.gcTime = Math.max(this.gcTime || 0, newGcTime ?? (_utils_js__WEBPACK_IMPORTED_MODULE_0__.isServer ? Infinity : 5 * 60 * 1e3));\n    }\n    clearGcTimeout() {\n        if (this.#gcTimeout) {\n            clearTimeout(this.#gcTimeout);\n            this.#gcTimeout = void 0;\n        }\n    }\n};\n //# sourceMappingURL=removable.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9yZW1vdmFibGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxtQkFBbUI7QUFDbUM7QUFDdEQsSUFBSUUsWUFBWTtJQUNkLENBQUNDLFNBQVMsQ0FBQztJQUNYQyxVQUFVO1FBQ1IsSUFBSSxDQUFDQyxjQUFjO0lBQ3JCO0lBQ0FDLGFBQWE7UUFDWCxJQUFJLENBQUNELGNBQWM7UUFDbkIsSUFBSUoseURBQWNBLENBQUMsSUFBSSxDQUFDTSxNQUFNLEdBQUc7WUFDL0IsSUFBSSxDQUFDLENBQUNKLFNBQVMsR0FBR0ssV0FBVztnQkFDM0IsSUFBSSxDQUFDQyxjQUFjO1lBQ3JCLEdBQUcsSUFBSSxDQUFDRixNQUFNO1FBQ2hCO0lBQ0Y7SUFDQUcsYUFBYUMsU0FBUyxFQUFFO1FBQ3RCLElBQUksQ0FBQ0osTUFBTSxHQUFHSyxLQUFLQyxHQUFHLENBQ3BCLElBQUksQ0FBQ04sTUFBTSxJQUFJLEdBQ2ZJLGFBQWNYLENBQUFBLCtDQUFRQSxHQUFHYyxXQUFXLElBQUksS0FBSyxHQUFFO0lBRW5EO0lBQ0FULGlCQUFpQjtRQUNmLElBQUksSUFBSSxDQUFDLENBQUNGLFNBQVMsRUFBRTtZQUNuQlksYUFBYSxJQUFJLENBQUMsQ0FBQ1osU0FBUztZQUM1QixJQUFJLENBQUMsQ0FBQ0EsU0FBUyxHQUFHLEtBQUs7UUFDekI7SUFDRjtBQUNGO0FBR0UsQ0FDRixxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly94c2Nhbi1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL3JlbW92YWJsZS5qcz83YTViIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9yZW1vdmFibGUudHNcbmltcG9ydCB7IGlzU2VydmVyLCBpc1ZhbGlkVGltZW91dCB9IGZyb20gXCIuL3V0aWxzLmpzXCI7XG52YXIgUmVtb3ZhYmxlID0gY2xhc3Mge1xuICAjZ2NUaW1lb3V0O1xuICBkZXN0cm95KCkge1xuICAgIHRoaXMuY2xlYXJHY1RpbWVvdXQoKTtcbiAgfVxuICBzY2hlZHVsZUdjKCkge1xuICAgIHRoaXMuY2xlYXJHY1RpbWVvdXQoKTtcbiAgICBpZiAoaXNWYWxpZFRpbWVvdXQodGhpcy5nY1RpbWUpKSB7XG4gICAgICB0aGlzLiNnY1RpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgdGhpcy5vcHRpb25hbFJlbW92ZSgpO1xuICAgICAgfSwgdGhpcy5nY1RpbWUpO1xuICAgIH1cbiAgfVxuICB1cGRhdGVHY1RpbWUobmV3R2NUaW1lKSB7XG4gICAgdGhpcy5nY1RpbWUgPSBNYXRoLm1heChcbiAgICAgIHRoaXMuZ2NUaW1lIHx8IDAsXG4gICAgICBuZXdHY1RpbWUgPz8gKGlzU2VydmVyID8gSW5maW5pdHkgOiA1ICogNjAgKiAxZTMpXG4gICAgKTtcbiAgfVxuICBjbGVhckdjVGltZW91dCgpIHtcbiAgICBpZiAodGhpcy4jZ2NUaW1lb3V0KSB7XG4gICAgICBjbGVhclRpbWVvdXQodGhpcy4jZ2NUaW1lb3V0KTtcbiAgICAgIHRoaXMuI2djVGltZW91dCA9IHZvaWQgMDtcbiAgICB9XG4gIH1cbn07XG5leHBvcnQge1xuICBSZW1vdmFibGVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZW1vdmFibGUuanMubWFwIl0sIm5hbWVzIjpbImlzU2VydmVyIiwiaXNWYWxpZFRpbWVvdXQiLCJSZW1vdmFibGUiLCJnY1RpbWVvdXQiLCJkZXN0cm95IiwiY2xlYXJHY1RpbWVvdXQiLCJzY2hlZHVsZUdjIiwiZ2NUaW1lIiwic2V0VGltZW91dCIsIm9wdGlvbmFsUmVtb3ZlIiwidXBkYXRlR2NUaW1lIiwibmV3R2NUaW1lIiwiTWF0aCIsIm1heCIsIkluZmluaXR5IiwiY2xlYXJUaW1lb3V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/removable.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/retryer.js":
/*!********************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/retryer.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CancelledError: () => (/* binding */ CancelledError),\n/* harmony export */   canFetch: () => (/* binding */ canFetch),\n/* harmony export */   createRetryer: () => (/* binding */ createRetryer),\n/* harmony export */   isCancelledError: () => (/* binding */ isCancelledError)\n/* harmony export */ });\n/* harmony import */ var _focusManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./focusManager.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/focusManager.js\");\n/* harmony import */ var _onlineManager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./onlineManager.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/onlineManager.js\");\n/* harmony import */ var _thenable_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./thenable.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/thenable.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/retryer.ts\n\n\n\n\nfunction defaultRetryDelay(failureCount) {\n    return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n    return (networkMode ?? \"online\") === \"online\" ? _onlineManager_js__WEBPACK_IMPORTED_MODULE_0__.onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n    constructor(options){\n        super(\"CancelledError\");\n        this.revert = options?.revert;\n        this.silent = options?.silent;\n    }\n};\nfunction isCancelledError(value) {\n    return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n    let isRetryCancelled = false;\n    let failureCount = 0;\n    let isResolved = false;\n    let continueFn;\n    const thenable = (0,_thenable_js__WEBPACK_IMPORTED_MODULE_1__.pendingThenable)();\n    const cancel = (cancelOptions)=>{\n        if (!isResolved) {\n            reject(new CancelledError(cancelOptions));\n            config.abort?.();\n        }\n    };\n    const cancelRetry = ()=>{\n        isRetryCancelled = true;\n    };\n    const continueRetry = ()=>{\n        isRetryCancelled = false;\n    };\n    const canContinue = ()=>_focusManager_js__WEBPACK_IMPORTED_MODULE_2__.focusManager.isFocused() && (config.networkMode === \"always\" || _onlineManager_js__WEBPACK_IMPORTED_MODULE_0__.onlineManager.isOnline()) && config.canRun();\n    const canStart = ()=>canFetch(config.networkMode) && config.canRun();\n    const resolve = (value)=>{\n        if (!isResolved) {\n            isResolved = true;\n            config.onSuccess?.(value);\n            continueFn?.();\n            thenable.resolve(value);\n        }\n    };\n    const reject = (value)=>{\n        if (!isResolved) {\n            isResolved = true;\n            config.onError?.(value);\n            continueFn?.();\n            thenable.reject(value);\n        }\n    };\n    const pause = ()=>{\n        return new Promise((continueResolve)=>{\n            continueFn = (value)=>{\n                if (isResolved || canContinue()) {\n                    continueResolve(value);\n                }\n            };\n            config.onPause?.();\n        }).then(()=>{\n            continueFn = void 0;\n            if (!isResolved) {\n                config.onContinue?.();\n            }\n        });\n    };\n    const run = ()=>{\n        if (isResolved) {\n            return;\n        }\n        let promiseOrValue;\n        const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n        try {\n            promiseOrValue = initialPromise ?? config.fn();\n        } catch (error) {\n            promiseOrValue = Promise.reject(error);\n        }\n        Promise.resolve(promiseOrValue).then(resolve).catch((error)=>{\n            if (isResolved) {\n                return;\n            }\n            const retry = config.retry ?? (_utils_js__WEBPACK_IMPORTED_MODULE_3__.isServer ? 0 : 3);\n            const retryDelay = config.retryDelay ?? defaultRetryDelay;\n            const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n            const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n            if (isRetryCancelled || !shouldRetry) {\n                reject(error);\n                return;\n            }\n            failureCount++;\n            config.onFail?.(failureCount, error);\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.sleep)(delay).then(()=>{\n                return canContinue() ? void 0 : pause();\n            }).then(()=>{\n                if (isRetryCancelled) {\n                    reject(error);\n                } else {\n                    run();\n                }\n            });\n        });\n    };\n    return {\n        promise: thenable,\n        cancel,\n        continue: ()=>{\n            continueFn?.();\n            return thenable;\n        },\n        cancelRetry,\n        continueRetry,\n        canStart,\n        start: ()=>{\n            if (canStart()) {\n                run();\n            } else {\n                pause().then(run);\n            }\n            return thenable;\n        }\n    };\n}\n //# sourceMappingURL=retryer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/retryer.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/subscribable.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/subscribable.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Subscribable: () => (/* binding */ Subscribable)\n/* harmony export */ });\n// src/subscribable.ts\nvar Subscribable = class {\n    constructor(){\n        this.listeners = /* @__PURE__ */ new Set();\n        this.subscribe = this.subscribe.bind(this);\n    }\n    subscribe(listener) {\n        this.listeners.add(listener);\n        this.onSubscribe();\n        return ()=>{\n            this.listeners.delete(listener);\n            this.onUnsubscribe();\n        };\n    }\n    hasListeners() {\n        return this.listeners.size > 0;\n    }\n    onSubscribe() {}\n    onUnsubscribe() {}\n};\n //# sourceMappingURL=subscribable.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9zdWJzY3JpYmFibGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHNCQUFzQjtBQUN0QixJQUFJQSxlQUFlO0lBQ2pCQyxhQUFjO1FBQ1osSUFBSSxDQUFDQyxTQUFTLEdBQUcsYUFBYSxHQUFHLElBQUlDO1FBQ3JDLElBQUksQ0FBQ0MsU0FBUyxHQUFHLElBQUksQ0FBQ0EsU0FBUyxDQUFDQyxJQUFJLENBQUMsSUFBSTtJQUMzQztJQUNBRCxVQUFVRSxRQUFRLEVBQUU7UUFDbEIsSUFBSSxDQUFDSixTQUFTLENBQUNLLEdBQUcsQ0FBQ0Q7UUFDbkIsSUFBSSxDQUFDRSxXQUFXO1FBQ2hCLE9BQU87WUFDTCxJQUFJLENBQUNOLFNBQVMsQ0FBQ08sTUFBTSxDQUFDSDtZQUN0QixJQUFJLENBQUNJLGFBQWE7UUFDcEI7SUFDRjtJQUNBQyxlQUFlO1FBQ2IsT0FBTyxJQUFJLENBQUNULFNBQVMsQ0FBQ1UsSUFBSSxHQUFHO0lBQy9CO0lBQ0FKLGNBQWMsQ0FDZDtJQUNBRSxnQkFBZ0IsQ0FDaEI7QUFDRjtBQUdFLENBQ0Ysd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8veHNjYW4tZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9zdWJzY3JpYmFibGUuanM/ZjcwMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvc3Vic2NyaWJhYmxlLnRzXG52YXIgU3Vic2NyaWJhYmxlID0gY2xhc3Mge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmxpc3RlbmVycyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7XG4gICAgdGhpcy5zdWJzY3JpYmUgPSB0aGlzLnN1YnNjcmliZS5iaW5kKHRoaXMpO1xuICB9XG4gIHN1YnNjcmliZShsaXN0ZW5lcikge1xuICAgIHRoaXMubGlzdGVuZXJzLmFkZChsaXN0ZW5lcik7XG4gICAgdGhpcy5vblN1YnNjcmliZSgpO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICB0aGlzLmxpc3RlbmVycy5kZWxldGUobGlzdGVuZXIpO1xuICAgICAgdGhpcy5vblVuc3Vic2NyaWJlKCk7XG4gICAgfTtcbiAgfVxuICBoYXNMaXN0ZW5lcnMoKSB7XG4gICAgcmV0dXJuIHRoaXMubGlzdGVuZXJzLnNpemUgPiAwO1xuICB9XG4gIG9uU3Vic2NyaWJlKCkge1xuICB9XG4gIG9uVW5zdWJzY3JpYmUoKSB7XG4gIH1cbn07XG5leHBvcnQge1xuICBTdWJzY3JpYmFibGVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdWJzY3JpYmFibGUuanMubWFwIl0sIm5hbWVzIjpbIlN1YnNjcmliYWJsZSIsImNvbnN0cnVjdG9yIiwibGlzdGVuZXJzIiwiU2V0Iiwic3Vic2NyaWJlIiwiYmluZCIsImxpc3RlbmVyIiwiYWRkIiwib25TdWJzY3JpYmUiLCJkZWxldGUiLCJvblVuc3Vic2NyaWJlIiwiaGFzTGlzdGVuZXJzIiwic2l6ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/subscribable.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/thenable.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/thenable.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pendingThenable: () => (/* binding */ pendingThenable),\n/* harmony export */   tryResolveSync: () => (/* binding */ tryResolveSync)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/thenable.ts\n\nfunction pendingThenable() {\n    let resolve;\n    let reject;\n    const thenable = new Promise((_resolve, _reject)=>{\n        resolve = _resolve;\n        reject = _reject;\n    });\n    thenable.status = \"pending\";\n    thenable.catch(()=>{});\n    function finalize(data) {\n        Object.assign(thenable, data);\n        delete thenable.resolve;\n        delete thenable.reject;\n    }\n    thenable.resolve = (value)=>{\n        finalize({\n            status: \"fulfilled\",\n            value\n        });\n        resolve(value);\n    };\n    thenable.reject = (reason)=>{\n        finalize({\n            status: \"rejected\",\n            reason\n        });\n        reject(reason);\n    };\n    return thenable;\n}\nfunction tryResolveSync(promise) {\n    let data;\n    promise.then((result)=>{\n        data = result;\n        return result;\n    }, _utils_js__WEBPACK_IMPORTED_MODULE_0__.noop)?.catch(_utils_js__WEBPACK_IMPORTED_MODULE_0__.noop);\n    if (data !== void 0) {\n        return {\n            data\n        };\n    }\n    return void 0;\n}\n //# sourceMappingURL=thenable.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi90aGVuYWJsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxrQkFBa0I7QUFDZ0I7QUFDbEMsU0FBU0M7SUFDUCxJQUFJQztJQUNKLElBQUlDO0lBQ0osTUFBTUMsV0FBVyxJQUFJQyxRQUFRLENBQUNDLFVBQVVDO1FBQ3RDTCxVQUFVSTtRQUNWSCxTQUFTSTtJQUNYO0lBQ0FILFNBQVNJLE1BQU0sR0FBRztJQUNsQkosU0FBU0ssS0FBSyxDQUFDLEtBQ2Y7SUFDQSxTQUFTQyxTQUFTQyxJQUFJO1FBQ3BCQyxPQUFPQyxNQUFNLENBQUNULFVBQVVPO1FBQ3hCLE9BQU9QLFNBQVNGLE9BQU87UUFDdkIsT0FBT0UsU0FBU0QsTUFBTTtJQUN4QjtJQUNBQyxTQUFTRixPQUFPLEdBQUcsQ0FBQ1k7UUFDbEJKLFNBQVM7WUFDUEYsUUFBUTtZQUNSTTtRQUNGO1FBQ0FaLFFBQVFZO0lBQ1Y7SUFDQVYsU0FBU0QsTUFBTSxHQUFHLENBQUNZO1FBQ2pCTCxTQUFTO1lBQ1BGLFFBQVE7WUFDUk87UUFDRjtRQUNBWixPQUFPWTtJQUNUO0lBQ0EsT0FBT1g7QUFDVDtBQUNBLFNBQVNZLGVBQWVDLE9BQU87SUFDN0IsSUFBSU47SUFDSk0sUUFBUUMsSUFBSSxDQUFDLENBQUNDO1FBQ1pSLE9BQU9RO1FBQ1AsT0FBT0E7SUFDVCxHQUFHbkIsMkNBQUlBLEdBQUdTLE1BQU1ULDJDQUFJQTtJQUNwQixJQUFJVyxTQUFTLEtBQUssR0FBRztRQUNuQixPQUFPO1lBQUVBO1FBQUs7SUFDaEI7SUFDQSxPQUFPLEtBQUs7QUFDZDtBQUlFLENBQ0Ysb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8veHNjYW4tZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi90aGVuYWJsZS5qcz9jMzVmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy90aGVuYWJsZS50c1xuaW1wb3J0IHsgbm9vcCB9IGZyb20gXCIuL3V0aWxzLmpzXCI7XG5mdW5jdGlvbiBwZW5kaW5nVGhlbmFibGUoKSB7XG4gIGxldCByZXNvbHZlO1xuICBsZXQgcmVqZWN0O1xuICBjb25zdCB0aGVuYWJsZSA9IG5ldyBQcm9taXNlKChfcmVzb2x2ZSwgX3JlamVjdCkgPT4ge1xuICAgIHJlc29sdmUgPSBfcmVzb2x2ZTtcbiAgICByZWplY3QgPSBfcmVqZWN0O1xuICB9KTtcbiAgdGhlbmFibGUuc3RhdHVzID0gXCJwZW5kaW5nXCI7XG4gIHRoZW5hYmxlLmNhdGNoKCgpID0+IHtcbiAgfSk7XG4gIGZ1bmN0aW9uIGZpbmFsaXplKGRhdGEpIHtcbiAgICBPYmplY3QuYXNzaWduKHRoZW5hYmxlLCBkYXRhKTtcbiAgICBkZWxldGUgdGhlbmFibGUucmVzb2x2ZTtcbiAgICBkZWxldGUgdGhlbmFibGUucmVqZWN0O1xuICB9XG4gIHRoZW5hYmxlLnJlc29sdmUgPSAodmFsdWUpID0+IHtcbiAgICBmaW5hbGl6ZSh7XG4gICAgICBzdGF0dXM6IFwiZnVsZmlsbGVkXCIsXG4gICAgICB2YWx1ZVxuICAgIH0pO1xuICAgIHJlc29sdmUodmFsdWUpO1xuICB9O1xuICB0aGVuYWJsZS5yZWplY3QgPSAocmVhc29uKSA9PiB7XG4gICAgZmluYWxpemUoe1xuICAgICAgc3RhdHVzOiBcInJlamVjdGVkXCIsXG4gICAgICByZWFzb25cbiAgICB9KTtcbiAgICByZWplY3QocmVhc29uKTtcbiAgfTtcbiAgcmV0dXJuIHRoZW5hYmxlO1xufVxuZnVuY3Rpb24gdHJ5UmVzb2x2ZVN5bmMocHJvbWlzZSkge1xuICBsZXQgZGF0YTtcbiAgcHJvbWlzZS50aGVuKChyZXN1bHQpID0+IHtcbiAgICBkYXRhID0gcmVzdWx0O1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH0sIG5vb3ApPy5jYXRjaChub29wKTtcbiAgaWYgKGRhdGEgIT09IHZvaWQgMCkge1xuICAgIHJldHVybiB7IGRhdGEgfTtcbiAgfVxuICByZXR1cm4gdm9pZCAwO1xufVxuZXhwb3J0IHtcbiAgcGVuZGluZ1RoZW5hYmxlLFxuICB0cnlSZXNvbHZlU3luY1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRoZW5hYmxlLmpzLm1hcCJdLCJuYW1lcyI6WyJub29wIiwicGVuZGluZ1RoZW5hYmxlIiwicmVzb2x2ZSIsInJlamVjdCIsInRoZW5hYmxlIiwiUHJvbWlzZSIsIl9yZXNvbHZlIiwiX3JlamVjdCIsInN0YXR1cyIsImNhdGNoIiwiZmluYWxpemUiLCJkYXRhIiwiT2JqZWN0IiwiYXNzaWduIiwidmFsdWUiLCJyZWFzb24iLCJ0cnlSZXNvbHZlU3luYyIsInByb21pc2UiLCJ0aGVuIiwicmVzdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/thenable.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@tanstack/query-core/build/modern/utils.js":
/*!******************************************************************!*\
  !*** ../node_modules/@tanstack/query-core/build/modern/utils.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addToEnd: () => (/* binding */ addToEnd),\n/* harmony export */   addToStart: () => (/* binding */ addToStart),\n/* harmony export */   ensureQueryFn: () => (/* binding */ ensureQueryFn),\n/* harmony export */   functionalUpdate: () => (/* binding */ functionalUpdate),\n/* harmony export */   hashKey: () => (/* binding */ hashKey),\n/* harmony export */   hashQueryKeyByOptions: () => (/* binding */ hashQueryKeyByOptions),\n/* harmony export */   isPlainArray: () => (/* binding */ isPlainArray),\n/* harmony export */   isPlainObject: () => (/* binding */ isPlainObject),\n/* harmony export */   isServer: () => (/* binding */ isServer),\n/* harmony export */   isValidTimeout: () => (/* binding */ isValidTimeout),\n/* harmony export */   keepPreviousData: () => (/* binding */ keepPreviousData),\n/* harmony export */   matchMutation: () => (/* binding */ matchMutation),\n/* harmony export */   matchQuery: () => (/* binding */ matchQuery),\n/* harmony export */   noop: () => (/* binding */ noop),\n/* harmony export */   partialMatchKey: () => (/* binding */ partialMatchKey),\n/* harmony export */   replaceData: () => (/* binding */ replaceData),\n/* harmony export */   replaceEqualDeep: () => (/* binding */ replaceEqualDeep),\n/* harmony export */   resolveEnabled: () => (/* binding */ resolveEnabled),\n/* harmony export */   resolveStaleTime: () => (/* binding */ resolveStaleTime),\n/* harmony export */   shallowEqualObjects: () => (/* binding */ shallowEqualObjects),\n/* harmony export */   shouldThrowError: () => (/* binding */ shouldThrowError),\n/* harmony export */   skipToken: () => (/* binding */ skipToken),\n/* harmony export */   sleep: () => (/* binding */ sleep),\n/* harmony export */   timeUntilStale: () => (/* binding */ timeUntilStale)\n/* harmony export */ });\n// src/utils.ts\nvar isServer =  true || 0;\nfunction noop() {}\nfunction functionalUpdate(updater, input) {\n    return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n    return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n    return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n    return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n    return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n    const { type = \"all\", exact, fetchStatus, predicate, queryKey, stale } = filters;\n    if (queryKey) {\n        if (exact) {\n            if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n                return false;\n            }\n        } else if (!partialMatchKey(query.queryKey, queryKey)) {\n            return false;\n        }\n    }\n    if (type !== \"all\") {\n        const isActive = query.isActive();\n        if (type === \"active\" && !isActive) {\n            return false;\n        }\n        if (type === \"inactive\" && isActive) {\n            return false;\n        }\n    }\n    if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n        return false;\n    }\n    if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n        return false;\n    }\n    if (predicate && !predicate(query)) {\n        return false;\n    }\n    return true;\n}\nfunction matchMutation(filters, mutation) {\n    const { exact, status, predicate, mutationKey } = filters;\n    if (mutationKey) {\n        if (!mutation.options.mutationKey) {\n            return false;\n        }\n        if (exact) {\n            if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n                return false;\n            }\n        } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n            return false;\n        }\n    }\n    if (status && mutation.state.status !== status) {\n        return false;\n    }\n    if (predicate && !predicate(mutation)) {\n        return false;\n    }\n    return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n    const hashFn = options?.queryKeyHashFn || hashKey;\n    return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n    return JSON.stringify(queryKey, (_, val)=>isPlainObject(val) ? Object.keys(val).sort().reduce((result, key)=>{\n            result[key] = val[key];\n            return result;\n        }, {}) : val);\n}\nfunction partialMatchKey(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (typeof a !== typeof b) {\n        return false;\n    }\n    if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n        return Object.keys(b).every((key)=>partialMatchKey(a[key], b[key]));\n    }\n    return false;\n}\nfunction replaceEqualDeep(a, b) {\n    if (a === b) {\n        return a;\n    }\n    const array = isPlainArray(a) && isPlainArray(b);\n    if (array || isPlainObject(a) && isPlainObject(b)) {\n        const aItems = array ? a : Object.keys(a);\n        const aSize = aItems.length;\n        const bItems = array ? b : Object.keys(b);\n        const bSize = bItems.length;\n        const copy = array ? [] : {};\n        const aItemsSet = new Set(aItems);\n        let equalItems = 0;\n        for(let i = 0; i < bSize; i++){\n            const key = array ? i : bItems[i];\n            if ((!array && aItemsSet.has(key) || array) && a[key] === void 0 && b[key] === void 0) {\n                copy[key] = void 0;\n                equalItems++;\n            } else {\n                copy[key] = replaceEqualDeep(a[key], b[key]);\n                if (copy[key] === a[key] && a[key] !== void 0) {\n                    equalItems++;\n                }\n            }\n        }\n        return aSize === bSize && equalItems === aSize ? a : copy;\n    }\n    return b;\n}\nfunction shallowEqualObjects(a, b) {\n    if (!b || Object.keys(a).length !== Object.keys(b).length) {\n        return false;\n    }\n    for(const key in a){\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isPlainArray(value) {\n    return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n    if (!hasObjectPrototype(o)) {\n        return false;\n    }\n    const ctor = o.constructor;\n    if (ctor === void 0) {\n        return true;\n    }\n    const prot = ctor.prototype;\n    if (!hasObjectPrototype(prot)) {\n        return false;\n    }\n    if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n        return false;\n    }\n    if (Object.getPrototypeOf(o) !== Object.prototype) {\n        return false;\n    }\n    return true;\n}\nfunction hasObjectPrototype(o) {\n    return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n    return new Promise((resolve)=>{\n        setTimeout(resolve, timeout);\n    });\n}\nfunction replaceData(prevData, data, options) {\n    if (typeof options.structuralSharing === \"function\") {\n        return options.structuralSharing(prevData, data);\n    } else if (options.structuralSharing !== false) {\n        if (true) {\n            try {\n                return replaceEqualDeep(prevData, data);\n            } catch (error) {\n                console.error(`Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`);\n                throw error;\n            }\n        }\n        return replaceEqualDeep(prevData, data);\n    }\n    return data;\n}\nfunction keepPreviousData(previousData) {\n    return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n    const newItems = [\n        ...items,\n        item\n    ];\n    return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n    const newItems = [\n        item,\n        ...items\n    ];\n    return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n    if (true) {\n        if (options.queryFn === skipToken) {\n            console.error(`Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`);\n        }\n    }\n    if (!options.queryFn && fetchOptions?.initialPromise) {\n        return ()=>fetchOptions.initialPromise;\n    }\n    if (!options.queryFn || options.queryFn === skipToken) {\n        return ()=>Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n    }\n    return options.queryFn;\n}\nfunction shouldThrowError(throwOnError, params) {\n    if (typeof throwOnError === \"function\") {\n        return throwOnError(...params);\n    }\n    return !!throwOnError;\n}\n //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/query-core/build/modern/utils.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryClientContext: () => (/* binding */ QueryClientContext),\n/* harmony export */   QueryClientProvider: () => (/* binding */ QueryClientProvider),\n/* harmony export */   useQueryClient: () => (/* binding */ useQueryClient)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/../node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/../node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ QueryClientContext,QueryClientProvider,useQueryClient auto */ // src/QueryClientProvider.tsx\n\n\nvar QueryClientContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(void 0);\nvar useQueryClient = (queryClient)=>{\n    const client = react__WEBPACK_IMPORTED_MODULE_0__.useContext(QueryClientContext);\n    if (queryClient) {\n        return queryClient;\n    }\n    if (!client) {\n        throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");\n    }\n    return client;\n};\nvar QueryClientProvider = ({ client, children })=>{\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        client.mount();\n        return ()=>{\n            client.unmount();\n        };\n    }, [\n        client\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(QueryClientContext.Provider, {\n        value: client,\n        children\n    });\n};\n //# sourceMappingURL=QueryClientProvider.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9yZWFjdC1xdWVyeS9idWlsZC9tb2Rlcm4vUXVlcnlDbGllbnRQcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OzsyR0FFQSw4QkFBOEI7QUFDQztBQUNTO0FBQ3hDLElBQUlFLG1DQUFxQkYsZ0RBQW1CLENBQzFDLEtBQUs7QUFFUCxJQUFJSSxpQkFBaUIsQ0FBQ0M7SUFDcEIsTUFBTUMsU0FBU04sNkNBQWdCLENBQUNFO0lBQ2hDLElBQUlHLGFBQWE7UUFDZixPQUFPQTtJQUNUO0lBQ0EsSUFBSSxDQUFDQyxRQUFRO1FBQ1gsTUFBTSxJQUFJRSxNQUFNO0lBQ2xCO0lBQ0EsT0FBT0Y7QUFDVDtBQUNBLElBQUlHLHNCQUFzQixDQUFDLEVBQ3pCSCxNQUFNLEVBQ05JLFFBQVEsRUFDVDtJQUNDViw0Q0FBZSxDQUFDO1FBQ2RNLE9BQU9NLEtBQUs7UUFDWixPQUFPO1lBQ0xOLE9BQU9PLE9BQU87UUFDaEI7SUFDRixHQUFHO1FBQUNQO0tBQU87SUFDWCxPQUFPLGFBQWEsR0FBR0wsc0RBQUdBLENBQUNDLG1CQUFtQlksUUFBUSxFQUFFO1FBQUVDLE9BQU9UO1FBQVFJO0lBQVM7QUFDcEY7QUFLRSxDQUNGLCtDQUErQyIsInNvdXJjZXMiOlsid2VicGFjazovL3hzY2FuLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcmVhY3QtcXVlcnkvYnVpbGQvbW9kZXJuL1F1ZXJ5Q2xpZW50UHJvdmlkZXIuanM/MDk0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuLy8gc3JjL1F1ZXJ5Q2xpZW50UHJvdmlkZXIudHN4XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGpzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xudmFyIFF1ZXJ5Q2xpZW50Q29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoXG4gIHZvaWQgMFxuKTtcbnZhciB1c2VRdWVyeUNsaWVudCA9IChxdWVyeUNsaWVudCkgPT4ge1xuICBjb25zdCBjbGllbnQgPSBSZWFjdC51c2VDb250ZXh0KFF1ZXJ5Q2xpZW50Q29udGV4dCk7XG4gIGlmIChxdWVyeUNsaWVudCkge1xuICAgIHJldHVybiBxdWVyeUNsaWVudDtcbiAgfVxuICBpZiAoIWNsaWVudCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIk5vIFF1ZXJ5Q2xpZW50IHNldCwgdXNlIFF1ZXJ5Q2xpZW50UHJvdmlkZXIgdG8gc2V0IG9uZVwiKTtcbiAgfVxuICByZXR1cm4gY2xpZW50O1xufTtcbnZhciBRdWVyeUNsaWVudFByb3ZpZGVyID0gKHtcbiAgY2xpZW50LFxuICBjaGlsZHJlblxufSkgPT4ge1xuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNsaWVudC5tb3VudCgpO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBjbGllbnQudW5tb3VudCgpO1xuICAgIH07XG4gIH0sIFtjbGllbnRdKTtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBqc3goUXVlcnlDbGllbnRDb250ZXh0LlByb3ZpZGVyLCB7IHZhbHVlOiBjbGllbnQsIGNoaWxkcmVuIH0pO1xufTtcbmV4cG9ydCB7XG4gIFF1ZXJ5Q2xpZW50Q29udGV4dCxcbiAgUXVlcnlDbGllbnRQcm92aWRlcixcbiAgdXNlUXVlcnlDbGllbnRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1RdWVyeUNsaWVudFByb3ZpZGVyLmpzLm1hcCJdLCJuYW1lcyI6WyJSZWFjdCIsImpzeCIsIlF1ZXJ5Q2xpZW50Q29udGV4dCIsImNyZWF0ZUNvbnRleHQiLCJ1c2VRdWVyeUNsaWVudCIsInF1ZXJ5Q2xpZW50IiwiY2xpZW50IiwidXNlQ29udGV4dCIsIkVycm9yIiwiUXVlcnlDbGllbnRQcm92aWRlciIsImNoaWxkcmVuIiwidXNlRWZmZWN0IiwibW91bnQiLCJ1bm1vdW50IiwiUHJvdmlkZXIiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js\n");

/***/ })

};
;