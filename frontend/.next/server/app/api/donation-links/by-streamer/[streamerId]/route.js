"use strict";(()=>{var e={};e.id=7427,e.ids=[7427],e.modules={30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},35203:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>p,originalPathname:()=>k,patchFetch:()=>g,requestAsyncStorage:()=>c,routeModule:()=>u,serverHooks:()=>m,staticGenerationAsyncStorage:()=>l,staticGenerationBailout:()=>h});var s={};r.r(s),r.d(s,{GET:()=>d});var a=r(6170),n=r(8533),o=r(54387),i=r(40064);async function d(e,{params:t}){try{let e=t?.streamerId;if(!e)return i.Z.json({success:!1,message:"streamerId is required"},{status:400});let r=new URL("http://xscan-backend:3001/api/donations/links");r.searchParams.set("streamerId",e);let s=await fetch(r.toString(),{method:"GET"});if(!s.ok){let e=(await s.json().catch(()=>({}))).message||"Failed to fetch donation links";return i.Z.json({success:!1,message:e},{status:s.status||502})}let a=await s.json();return i.Z.json({success:!0,data:a.data??a})}catch(e){return console.error("Error fetching streamer donation links:",e),i.Z.json({success:!1,message:"Internal server error"},{status:500})}}let u=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/donation-links/by-streamer/[streamerId]/route",pathname:"/api/donation-links/by-streamer/[streamerId]",filename:"route",bundlePath:"app/api/donation-links/by-streamer/[streamerId]/route"},resolvedPagePath:"D:\\repo\\xscan\\frontend\\src\\app\\api\\donation-links\\by-streamer\\[streamerId]\\route.ts",nextConfigOutput:"standalone",userland:s}),{requestAsyncStorage:c,staticGenerationAsyncStorage:l,serverHooks:m,headerHooks:p,staticGenerationBailout:h}=u,k="/api/donation-links/by-streamer/[streamerId]/route";function g(){return(0,o.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:l})}}};var t=require("../../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[3499,7386],()=>r(35203));module.exports=s})();