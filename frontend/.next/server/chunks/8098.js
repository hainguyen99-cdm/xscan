exports.id=8098,exports.ids=[8098],exports.modules={35535:(t,e,a)=>{Promise.resolve().then(a.bind(a,55274)),Promise.resolve().then(a.bind(a,12448))},38355:(t,e,a)=>{Promise.resolve().then(a.t.bind(a,45483,23)),Promise.resolve().then(a.t.bind(a,46544,23)),Promise.resolve().then(a.t.bind(a,17680,23)),Promise.resolve().then(a.t.bind(a,24138,23)),Promise.resolve().then(a.t.bind(a,38705,23)),Promise.resolve().then(a.t.bind(a,57974,23))},55274:(t,e,a)=>{"use strict";a.r(e),a.d(e,{Providers:()=>u});var s=a(54714),i=a(87813),r=a(50774),n=a(77580),o=a(88934),l=a(31812);function c({children:t}){let{isAuthenticated:e,initializeAuth:a}=(0,l.qr)(),[i,r]=(0,n.useState)(!0),[c,d]=(0,n.useState)(!1),[u,p]=(0,n.useState)(null),h=(0,o.useRouter)(),g=(0,o.usePathname)(),w=["/login","/register","/forgot-password","/reset-password"],m=["/login","/forgot-password","/reset-password"],f=(0,n.useCallback)(async()=>{try{console.log("Starting authentication initialization..."),p(null),await a(),console.log("Authentication initialization completed")}catch(t){console.error("Failed to initialize authentication:",t),p(t instanceof Error?t.message:"Authentication failed")}finally{r(!1),d(!0)}},[a]);return((0,n.useEffect)(()=>{f()},[f]),(0,n.useEffect)(()=>{if(!i&&c){console.log("Running authentication checks for path:",g);let t=setTimeout(()=>{let t=w.includes(g),a=m.includes(g);console.log("Auth state check:",{isAuthenticated:e,pathname:g,isPublicRoute:t,isLoginOnlyRoute:a,authError:u}),e||t?e&&a&&(console.log("Redirecting to dashboard: authenticated on login-only route"),h.push("/dashboard")):(console.log("Redirecting to login: not authenticated on protected route"),h.push("/login"))},150);return()=>clearTimeout(t)}},[e,g,i,c,h,w,m,u]),(0,n.useEffect)(()=>{if(!e||i)return;let t=setInterval(async()=>{try{console.log("Performing periodic token validation..."),await a()}catch(t){console.error("Periodic token validation failed:",t),p("Token validation failed")}},3e5);return()=>clearInterval(t)},[e,i,a]),i)?s.jsx("div",{className:"min-h-screen bg-gray-50 flex items-center justify-center",children:(0,s.jsxs)("div",{className:"text-center",children:[s.jsx("div",{className:"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600 mx-auto mb-4"}),s.jsx("p",{className:"text-gray-600",children:"Initializing..."}),u&&s.jsx("p",{className:"text-red-500 text-sm mt-2",children:u})]})}):s.jsx(s.Fragment,{children:t})}let d=new i.S({defaultOptions:{queries:{retry:1,refetchOnWindowFocus:!1}}});function u({children:t}){return s.jsx(r.aH,{client:d,children:s.jsx(c,{children:t})})}},12448:(t,e,a)=>{"use strict";a.r(e),a.d(e,{ToastContainer:()=>i,showToast:()=>r}),a(54714);var s=a(77580);function i(){let[t,e]=(0,s.useState)([]),a=t=>{let a=Math.random().toString(36).substr(2,9);e(e=>[...e,{...t,id:a}])};return(0,s.useEffect)(()=>(window.showToast=a,()=>{delete window.showToast}),[]),null}a(9206);let r=t=>{}},21102:(t,e,a)=>{"use strict";a.d(e,{G$:()=>m,H6:()=>l,Nr:()=>u,Xz:()=>g,Zw:()=>w,_f:()=>p,hV:()=>o,hi:()=>s,pc:()=>h,pw:()=>d,uB:()=>n,validateAuthToken:()=>c,x1:()=>r});let s=a(84115).Z.create({baseURL:"http://localhost:3001",timeout:3e4,headers:{"Content-Type":"application/json"}});s.interceptors.request.use(t=>{let e=o();return e&&(t.headers.Authorization=`Bearer ${e}`),t},t=>Promise.reject(t)),s.interceptors.response.use(t=>t,async t=>(t.response?.status===401&&(console.log("401 Unauthorized - clearing token"),delete s.defaults.headers.common.Authorization),Promise.reject(t)));let i={auth:{login:"/api/auth/login",register:"/api/auth/register",logout:"/api/auth/logout",refresh:"/api/auth/refresh",profile:"/api/auth/profile"},targets:{list:"/api/targets",create:"/api/targets",get:t=>`/api/targets/${t}`,update:t=>`/api/targets/${t}`,delete:t=>`/api/targets/${t}`},scans:{list:"/api/scans",create:"/api/scans",get:t=>`/api/scans/${t}`,update:t=>`/api/scans/${t}`,delete:t=>`/api/scans/${t}`,start:t=>`/api/scans/${t}/start`,stop:t=>`/api/scans/${t}/stop`,results:t=>`/api/scans/${t}/results`,logs:t=>`/api/scans/${t}/logs`},projects:{list:"/api/projects",create:"/api/projects",get:t=>`/api/projects/${t}`,update:t=>`/api/projects/${t}`,delete:t=>`/api/projects/${t}`,members:t=>`/api/projects/${t}/members`},users:{list:"/api/users",get:t=>`/api/users/${t}`,update:t=>`/api/users/${t}`,activate:t=>`/api/users/${t}/activate`,deactivate:t=>`/api/users/${t}/deactivate`,delete:t=>`/api/users/${t}`,stats:"/api/users/stats",discoverStreamers:"/api/users/discover/streamers"},wallets:{create:"/api/wallets",get:t=>`/api/wallets/${t}`,getByUser:t=>`/api/wallets/user/${t}`,addFunds:t=>`/api/wallets/${t}/add-funds`,withdrawFunds:t=>`/api/wallets/${t}/withdraw-funds`,transferFunds:t=>`/api/wallets/${t}/transfer-funds`,getBalance:t=>`/api/wallets/${t}/balance`,getTransactions:t=>`/api/wallets/${t}/transactions`,getTransaction:(t,e)=>`/api/wallets/${t}/transactions/${e}`,getTransactionsByType:(t,e)=>`/api/wallets/${t}/transactions/type/${e}`,getTransactionStats:t=>`/api/wallets/${t}/transaction-stats`,processDonation:t=>`/api/wallets/${t}/donate`,processFee:t=>`/api/wallets/${t}/process-fee`,deactivate:t=>`/api/wallets/${t}/deactivate`,reactivate:t=>`/api/wallets/${t}/reactivate`},admin:{users:{list:"/api/admin/users",get:t=>`/api/admin/users/${t}`,update:t=>`/api/admin/users/${t}`,updateStatus:t=>`/api/admin/users/${t}/status`,verify:t=>`/api/admin/users/${t}/verify`,unverify:t=>`/api/admin/users/${t}/verify`,delete:t=>`/api/admin/users/${t}`}}},r={auth:{login:async(t,e)=>(await s.post(i.auth.login,{email:t,password:e})).data,register:async(t,e,a,r,n)=>(await s.post(i.auth.register,{email:t,password:e,firstName:a,lastName:r,role:n})).data,logout:async()=>(await s.post(i.auth.logout)).data,getProfile:async()=>(await s.get(i.auth.profile)).data},targets:{list:async t=>(await s.get(i.targets.list,{params:t})).data,create:async t=>(await s.post(i.targets.create,t)).data,get:async t=>(await s.get(i.targets.get(t))).data,update:async(t,e)=>(await s.put(i.targets.update(t),e)).data,delete:async t=>(await s.delete(i.targets.delete(t))).data},scans:{list:async t=>(await s.get(i.scans.list,{params:t})).data,create:async t=>(await s.post(i.scans.create,t)).data,get:async t=>(await s.get(i.scans.get(t))).data,update:async(t,e)=>(await s.put(i.scans.update(t),e)).data,delete:async t=>(await s.delete(i.scans.delete(t))).data},projects:{list:async()=>(await s.get(i.projects.list)).data,create:async t=>(await s.post(i.projects.create,t)).data,get:async t=>(await s.get(i.projects.get(t))).data,update:async(t,e)=>(await s.put(i.projects.update(t),e)).data,delete:async t=>(await s.delete(i.projects.delete(t))).data},users:{list:async()=>(await s.get(i.users.list)).data,get:async t=>(await s.get(i.users.get(t))).data,update:async(t,e)=>(await s.put(i.users.update(t),e)).data,activate:async t=>(await s.patch(i.users.activate(t))).data,deactivate:async t=>(await s.patch(i.users.deactivate(t))).data,delete:async t=>(await s.delete(i.users.delete(t))).data,stats:async()=>(await s.get(i.users.stats)).data,discoverStreamers:async t=>(await s.get(i.users.discoverStreamers,{params:t})).data},admin:{users:{list:async t=>(await s.get(i.admin.users.list,{params:t})).data,get:async t=>(await s.get(i.admin.users.get(t))).data,update:async(t,e)=>(await s.put(i.admin.users.update(t),e)).data,updateStatus:async(t,e,a)=>(await s.post(i.admin.users.updateStatus(t),{status:e,reason:a})).data,verify:async t=>(await s.post(i.admin.users.verify(t))).data,unverify:async t=>(await s.delete(i.admin.users.unverify(t))).data,delete:async t=>(await s.delete(i.admin.users.delete(t))).data}},wallets:{create:async t=>(await s.post(i.wallets.create,t)).data,getByUser:async t=>(await s.get(i.wallets.getByUser(t))).data,getTransactions:async t=>(await s.get(i.wallets.getTransactions(t))).data,addFunds:async(t,e)=>(await s.post(i.wallets.addFunds(t),e)).data,withdrawFunds:async(t,e)=>(await s.post(i.wallets.withdrawFunds(t),e)).data,transferFunds:async(t,e)=>(await s.post(i.wallets.transferFunds(t),e)).data}};function n(t){}function o(){return null}function l(){}async function c(){try{console.log("Validating auth token...");let t=o();if(console.log("Stored token found:",!!t),!t)return console.log("No token found, returning invalid"),{isValid:!1,user:null};if("mock-token-for-testing"===t){console.log("Mock token detected, returning mock streamer user for testing");let t={id:"mock-streamer-123",email:"streamer@test.com",name:"Test Streamer",username:"teststreamer",role:"streamer",profilePicture:"/api/placeholder/40/40",bio:"Mock streamer for testing",location:"Test Location",website:"https://test.com",timezone:"UTC",notifications:{email:!0,push:!0,sms:!1},privacy:{profilePublic:!0,showEmail:!1,showLocation:!0},isEmailVerified:!0,twoFactorEnabled:!1,status:"active",createdAt:new Date().toISOString(),lastLoginAt:new Date().toISOString()};return{isValid:!0,user:t}}let e=await r.auth.getProfile();if(console.log("Profile response:",e),e&&e.user)return console.log("Token validation successful, user:",e.user.username),{isValid:!0,user:e.user};return console.log("Token validation failed: no user data in response"),{isValid:!1,user:null}}catch(t){if(console.error("Token validation error:",t),o())return console.log("Backend not available, returning mock user for testing"),{isValid:!0,user:{id:"mock-streamer-backend-error",email:"streamer@test.com",name:"Test Streamer (Backend Error)",username:"teststreamer",role:"streamer",profilePicture:"/api/placeholder/40/40",bio:"Mock streamer for testing (backend error)",location:"Test Location",website:"https://test.com",timezone:"UTC",notifications:{email:!0,push:!0,sms:!1},privacy:{profilePublic:!0,showEmail:!1,showLocation:!0},isEmailVerified:!0,twoFactorEnabled:!1,status:"active",createdAt:new Date().toISOString(),lastLoginAt:new Date().toISOString()}};return{isValid:!1,user:null}}}function d(){return!1}let u=async()=>{let t=await fetch("https://api.vietqr.io/v2/banks");if(!t.ok)throw Error("Failed to fetch bank list");return t.json()},p=async()=>{let t=o();if(!t)throw Error("Authentication required");let e=await fetch("/api/users/bank-accounts",{headers:{Authorization:`Bearer ${t}`}});if(!e.ok)throw Error("Failed to fetch bank accounts");let a=await e.json();return Array.isArray(a)?a:a.data||a.accounts||[]},h=async t=>{let e=o();if(!e)throw Error("Authentication required");let a=await fetch("/api/users/bank-accounts",{method:"POST",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"},body:JSON.stringify(t)});if(!a.ok)throw Error((await a.json()).message||"Failed to create bank account");let s=await a.json();return s.data||s},g=async(t,e)=>{let a=o();if(!a)throw Error("Authentication required");let s=await fetch(`/api/users/bank-accounts/${t}`,{method:"PATCH",headers:{Authorization:`Bearer ${a}`,"Content-Type":"application/json"},body:JSON.stringify(e)});if(!s.ok)throw Error((await s.json()).message||"Failed to update bank account");let i=await s.json();return i.data||i},w=async t=>{let e=o();if(!e)throw Error("Authentication required");let a=await fetch(`/api/users/bank-accounts/${t}`,{method:"DELETE",headers:{Authorization:`Bearer ${e}`}});if(!a.ok)throw Error((await a.json()).message||"Failed to delete bank account")},m=async t=>{let e=o();if(!e)throw Error("Authentication required");let a=await fetch(`/api/users/bank-accounts/${t}/set-default`,{method:"PATCH",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"}});if(!a.ok)throw Error((await a.json()).message||"Failed to set default bank account");let s=await a.json();return s.data||s}},31812:(t,e,a)=>{"use strict";a.d(e,{HB:()=>c,qr:()=>o,tN:()=>l});var s=a(11914),i=a(71042),r=a(21102);let n={user:null,isAuthenticated:!1,wallet:null,transactions:[],donations:[],donationLinks:[],recentDonations:[],obsSettings:null,dashboardStats:null,isLoading:!1,error:null},o=(0,s.Ue)()((0,i.mW)((0,i.tJ)((t,e)=>({...n,setUser:e=>t({user:e,isAuthenticated:!!e}),setAuthenticated:e=>t({isAuthenticated:e}),refreshUser:async()=>{try{let{isValid:e,user:a}=await (0,r.validateAuthToken)();e&&a&&t({user:a,isAuthenticated:!0})}catch(t){console.error("Failed to refresh user data:",t)}},updateUserRole:a=>{let{user:s}=e();s&&t({user:{...s,role:a}})},initializeAuth:async()=>{try{if(console.log("Initializing authentication..."),(0,r.pw)()){console.log("Token is expired, clearing auth state"),(0,r.H6)(),t({user:null,isAuthenticated:!1});return}let{isValid:e,user:a}=await (0,r.validateAuthToken)();console.log("Token validation result:",{isValid:e,user:a?"exists":"null"}),e&&a?(console.log("Setting authenticated user:",a.name),t({user:a,isAuthenticated:!0})):(console.log("Token invalid, clearing auth state"),(0,r.H6)(),t({user:null,isAuthenticated:!1}))}catch(e){console.error("Authentication initialization error:",e),(0,r.H6)(),t({user:null,isAuthenticated:!1})}},setWallet:e=>t({wallet:e}),updateWalletBalance:a=>{let{wallet:s}=e();s&&t({wallet:{...s,balance:s.balance+a}})},addTransaction:a=>{let{transactions:s}=e();t({transactions:[a,...s]})},setTransactions:e=>t({transactions:e}),addDonation:a=>{let{donations:s,recentDonations:i}=e();t({donations:[a,...s],recentDonations:[a,...i.slice(0,9)]})},setDonations:e=>t({donations:e}),addDonationLink:a=>{let{donationLinks:s}=e();t({donationLinks:[a,...s||[]]})},updateDonationLink:(a,s)=>{let{donationLinks:i}=e();t({donationLinks:(i||[]).map(t=>t.id===a?{...t,...s}:t)})},removeDonationLink:a=>{let{donationLinks:s}=e();t({donationLinks:(s||[]).filter(t=>t.id!==a)})},setDonationLinks:e=>t({donationLinks:e||[]}),setOBSSettings:e=>t({obsSettings:e}),updateOBSSettings:a=>{let{obsSettings:s}=e();s&&t({obsSettings:{...s,...a}})},setDashboardStats:e=>t({dashboardStats:e}),setLoading:e=>t({isLoading:e}),setError:e=>t({error:e}),clearError:()=>t({error:null}),reset:()=>t(n)}),{name:"auth-store",partialize:t=>({user:t.user,isAuthenticated:t.isAuthenticated,wallet:t.wallet,transactions:t.transactions,donations:t.donations,donationLinks:t.donationLinks,obsSettings:t.obsSettings})}))),l=(0,s.Ue)()((0,i.mW)((0,i.tJ)(t=>({isAuthenticating:!1,authError:null,login:async(e,a)=>{t({isAuthenticating:!0,authError:null});try{let t=await r.x1.auth.login(e,a);if(t&&t.access_token&&t.user)(0,r.uB)(t.access_token),o.getState().setUser(t.user),o.getState().setAuthenticated(!0);else throw Error("Invalid response format")}catch(a){let e=a.response?.data?.message||a.message||"Login failed";throw t({authError:e}),Error(e)}finally{t({isAuthenticating:!1})}},register:async e=>{t({isAuthenticating:!0,authError:null});try{let t=e.name.trim().split(" "),a=t[0]||"",s=t.slice(1).join(" ")||"";if(a&&!s&&(s="User"),a.length<2)throw Error("First name must be at least 2 characters long");if(s.length<2)throw Error("Last name must be at least 2 characters long");let i={email:e.email,password:e.password,firstName:a,lastName:s,role:e.role},n=await r.x1.auth.register(i.email,i.password,i.firstName,i.lastName,i.role);if(n&&n.access_token&&n.user)(0,r.uB)(n.access_token),o.getState().setUser(n.user),o.getState().setAuthenticated(!0);else throw Error("Registration failed")}catch(a){let e=a.response?.data?.message||a.message||"Registration failed";throw t({authError:e}),Error(e)}finally{t({isAuthenticating:!1})}},logout:()=>{r.x1.auth.logout().catch(console.error),(0,r.H6)(),o.getState().reset(),t({isAuthenticating:!1,authError:null})},forgotPassword:async e=>{t({isAuthenticating:!0,authError:null});try{await new Promise(t=>setTimeout(t,1e3))}catch(a){let e=a.response?.data?.message||a.message||"Failed to send reset email";throw t({authError:e}),Error(e)}finally{t({isAuthenticating:!1})}},resetPassword:async(e,a)=>{t({isAuthenticating:!0,authError:null});try{await new Promise(t=>setTimeout(t,1e3))}catch(a){let e=a.response?.data?.message||a.message||"Failed to reset password";throw t({authError:e}),Error(e)}finally{t({isAuthenticating:!1})}},verifyEmail:async e=>{t({isAuthenticating:!0,authError:null});try{await new Promise(t=>setTimeout(t,1e3))}catch(a){let e=a.response?.data?.message||a.message||"Failed to verify email";throw t({authError:e}),Error(e)}finally{t({isAuthenticating:!1})}}}),{name:"auth-store",partialize:t=>({isAuthenticating:t.isAuthenticating,authError:t.authError})}))),c=(0,s.Ue)()((0,i.mW)((0,i.tJ)(t=>({sidebarOpen:!1,theme:"light",notifications:[],toggleSidebar:()=>t(t=>({sidebarOpen:!t.sidebarOpen})),setTheme:e=>t({theme:e}),addNotification:e=>t(t=>({notifications:[{...e,id:Date.now().toString(),timestamp:new Date},...t.notifications]})),removeNotification:e=>t(t=>({notifications:t.notifications.filter(t=>t.id!==e)})),clearNotifications:()=>t({notifications:[]})}),{name:"ui-store",partialize:t=>({theme:t.theme})})))},44161:(t,e,a)=>{"use strict";a.r(e),a.d(e,{default:()=>g,metadata:()=>h});var s=a(40657),i=a(71481);let r=(0,i.createProxy)(String.raw`D:\repo\xscan\frontend\src\app\providers.tsx`),{__esModule:n,$$typeof:o}=r;r.default;let l=(0,i.createProxy)(String.raw`D:\repo\xscan\frontend\src\app\providers.tsx#Providers`),c=(0,i.createProxy)(String.raw`D:\repo\xscan\frontend\src\components\ui\toast.tsx`),{__esModule:d,$$typeof:u}=c;c.default;let p=(0,i.createProxy)(String.raw`D:\repo\xscan\frontend\src\components\ui\toast.tsx#ToastContainer`);(0,i.createProxy)(String.raw`D:\repo\xscan\frontend\src\components\ui\toast.tsx#showToast`),a(91641);let h={title:"DonationPlatform - Streamer Donation System",description:"Professional donation platform for streamers and KOLs with OBS alert integration"};function g({children:t}){return s.jsx("html",{lang:"en",children:s.jsx("body",{children:(0,s.jsxs)(l,{children:[t,s.jsx(p,{})]})})})}},91641:()=>{}};